include "TriggerLibs/NativeLib"

include "LibUTES_h"

//--------------------------------------------------------------------------------------------------
// Library: UNIT TESTER
//--------------------------------------------------------------------------------------------------
// External Library Initialization
void libUTES_InitLibraries () {
    libNtve_InitVariables();
}

// Variable Initialization
bool libUTES_InitVariables_completed = false;

void libUTES_InitVariables () {
    int init_i;
    int init_j;

    if (libUTES_InitVariables_completed) {
        return;
    }

    libUTES_InitVariables_completed = true;

    libUTES_gv_builders = UnitGroupEmpty();
    libUTES_gv_test_timer = TimerCreate();
    libUTES_gv_test_timer_window = c_timerWindowNone;
    libUTES_gv_map_structure_storage = "";
    for (init_i = 0; init_i <= 2; init_i += 1) {
        libUTES_gv_unit_storage[init_i] = "";
    }
    libUTES_gv_vision = true;
    libUTES_gv_tester_menu = c_invalidDialogControlId;
    libUTES_gv_tester_panel = c_invalidDialogControlId;
    libUTES_gv_menu_mode_settings = c_invalidDialogControlId;
    libUTES_gv_menu_mode_creator = c_invalidDialogControlId;
    libUTES_gv_menu_creator_panel = c_invalidDialogControlId;
    libUTES_gv_menu_creator_mirror = c_invalidDialogControlId;
    libUTES_gv_menu_creator_clear = c_invalidDialogControlId;
    libUTES_gv_menu_attack_panel = c_invalidDialogControlId;
    libUTES_gv_menu_attack_pause = c_invalidDialogControlId;
    libUTES_gv_menu_attack_reset = c_invalidDialogControlId;
    libUTES_gv_menu_start_attack = c_invalidDialogControlId;
    libUTES_gv_menu_stop_attack = c_invalidDialogControlId;
    libUTES_gv_menu_attack_attack = c_invalidDialogControlId;
    libUTES_gv_settings_panel = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 3; init_i += 1) {
        libUTES_gv_settings_upgradebutton[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        libUTES_gv_settings_researchbutton[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        libUTES_gv_settings_visionbutton[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= libUTES_gv_const_terrains; init_i += 1) {
        libUTES_gv_settings_terrainbutton[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= libUTES_gv_const_players; init_i += 1) {
        libUTES_gv_settings_allianceplayerlabel[init_i] = c_invalidDialogControlId;
    }
    for (init_i = 0; init_i <= libUTES_gv_const_players; init_i += 1) {
        for (init_j = 0; init_j <= 2; init_j += 1) {
            libUTES_gv_settings_alliancebuttons[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    libUTES_gv_creator_panel = c_invalidDialogControlId;
    for (init_i = 0; init_i <= 1; init_i += 1) {
        for (init_j = 0; init_j <= libUTES_gv_tMAXFACTIONS; init_j += 1) {
            libUTES_gv_creator_racebutton[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        for (init_j = 0; init_j <= libUTES_gv_const_card_length; init_j += 1) {
            libUTES_gv_creator_itembutton[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    for (init_i = 0; init_i <= 1; init_i += 1) {
        for (init_j = 0; init_j <= libUTES_gv_const_card_length; init_j += 1) {
            libUTES_gv_creator_itemface[init_i][init_j] = c_invalidDialogControlId;
        }
    }
    libUTES_gv_leaderboard = c_boardNone;
}

// Functions
bool libUTES_gf_NoUnitsForSide (int lp_side) {
    // Automatic Variable Declarations
    // Implementation
    if ((UnitGroupCount(UnitGroup(null, libUTES_gv_side_player[lp_side], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), c_unitCountAlive) == 0) && (UnitGroupCount(UnitGroup("Battlecruiser", libUTES_gv_side_player[lp_side], RegionEntireMap(), UnitFilter(0, (1 << (c_targetFilterStasis - 32)) | (1 << (c_targetFilterInvulnerable - 32)), (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32))), 0), c_unitCountAlive) == 0)) {
        return true;
    }
    else {
        return false;
    }
}

int libUTES_gf_DialogItemFromLayoutHookup (int lp_type, string lp_name) {
    // Automatic Variable Declarations
    // Implementation
    DialogControlHookupStandard(lp_type, lp_name);
    return DialogControlLastCreated();
}

void libUTES_gf_AddTerrainData (string lp_regionString) {
    // Variable Declarations
    int lv_item_index;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    while ((libUTES_gv_data_terrain[lv_item_index].lv_region != null)) {
        lv_item_index += 1;
    }
    libUTES_gv_data_terrain[lv_item_index].lv_region = RegionFromName(lp_regionString);
    libUTES_gv_data_terrain[lv_item_index].lv_spawnPoints[0] = PointFromName((lp_regionString + "spawn0"));
    libUTES_gv_data_terrain[lv_item_index].lv_spawnPoints[1] = PointFromName((lp_regionString + "spawn1"));
    libUTES_gv_data_terrain[lv_item_index].lv_spawnPoints[2] = PointFromName((lp_regionString + "spawn2"));
}

trigger auto_libUTES_gf_RemoveNeutralStructures_Trigger = null;

void libUTES_gf_RemoveNeutralStructures () {
    if (auto_libUTES_gf_RemoveNeutralStructures_Trigger == null) {
        auto_libUTES_gf_RemoveNeutralStructures_Trigger = TriggerCreate("auto_libUTES_gf_RemoveNeutralStructures_TriggerFunc");
    }

    TriggerExecute(auto_libUTES_gf_RemoveNeutralStructures_Trigger, false, false);
}

bool auto_libUTES_gf_RemoveNeutralStructures_TriggerFunc (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto998265AF_g;
    int auto998265AF_u;
    unit auto998265AF_var;

    // Implementation
    auto998265AF_g = UnitGroup(null, 0, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
    auto998265AF_u = UnitGroupCount(auto998265AF_g, c_unitCountAll);
    for (;; auto998265AF_u -= 1) {
        auto998265AF_var = UnitGroupUnitFromEnd(auto998265AF_g, auto998265AF_u);
        if (auto998265AF_var == null) { break; }
        UnitRemove(auto998265AF_var);
    }
    return true;
}

trigger auto_libUTES_gf_SaveMapStructures_Trigger = null;

void libUTES_gf_SaveMapStructures () {
    if (auto_libUTES_gf_SaveMapStructures_Trigger == null) {
        auto_libUTES_gf_SaveMapStructures_Trigger = TriggerCreate("auto_libUTES_gf_SaveMapStructures_TriggerFunc");
    }

    TriggerExecute(auto_libUTES_gf_SaveMapStructures_Trigger, false, false);
}

bool auto_libUTES_gf_SaveMapStructures_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_string;
    string lv_unittype;
    string lv_x;
    string lv_y;

    // Automatic Variable Declarations
    unitgroup auto82D3A2D5_g;
    int auto82D3A2D5_u;
    unit auto82D3A2D5_var;

    // Variable Initialization
    lv_string = "";
    lv_unittype = "";
    lv_x = "";
    lv_y = "";

    // Implementation
    auto82D3A2D5_g = UnitGroup(null, 0, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
    auto82D3A2D5_u = UnitGroupCount(auto82D3A2D5_g, c_unitCountAll);
    for (;; auto82D3A2D5_u -= 1) {
        auto82D3A2D5_var = UnitGroupUnitFromEnd(auto82D3A2D5_g, auto82D3A2D5_u);
        if (auto82D3A2D5_var == null) { break; }
        lv_unittype = (UnitGetType(auto82D3A2D5_var));
        lv_x = FixedToString(PointGetX(UnitGetPosition(auto82D3A2D5_var)), c_fixedPrecisionAny);
        lv_y = FixedToString(PointGetY(UnitGetPosition(auto82D3A2D5_var)), c_fixedPrecisionAny);
        lv_string = (lv_string + lv_unittype + " " + lv_x + " " + lv_y + " ");
    }
    libUTES_gv_map_structure_storage = lv_string;
    return true;
}

void libUTES_gf_RestoreMapStructures () {
    // Automatic Variable Declarations
    // Implementation
    libUTES_gf_RemoveNeutralStructures();
    libUTES_gf_LoadTesterUnits(libUTES_gv_map_structure_storage, 0);
}

void libUTES_gf_RenderTesterUIForPlayer (int lp_player) {
    // Variable Declarations
    int lv_side_ii;
    int lv_card_ii;
    int lv_level_ii;
    string lv_unit;
    string lv_commander;
    string lv_tFaction;

    // Automatic Variable Declarations
    const int autoD42DC03D_ae = libUTES_gv_const_terrains;
    int autoD42DC03D_var;
    const int auto973E0E1E_ae = libUTES_gv_const_players;
    int auto973E0E1E_var;
    const int auto9A6B9193_ae = 1;
    const int auto9A6B9193_ai = 1;
    const int auto3C006DE2_ae = libUTES_gv_const_card_length;
    const int auto3C006DE2_ai = 1;
    int autoFC4B7638_ae;
    const int autoFC4B7638_ai = 1;
    const int auto246CB870_ae = libUTES_gv_const_card_length;
    const int auto246CB870_ai = 1;
    const int auto96E2DABE_ae = 1;
    int auto96E2DABE_var;

    // Variable Initialization

    // Implementation
    if ((libUTES_gv_attack_mode == true)) {
        DialogControlSetEnabled(libUTES_gv_menu_mode_settings, PlayerGroupSingle(lp_player), false);
    }
    else {
        DialogControlSetEnabled(libUTES_gv_menu_mode_settings, PlayerGroupSingle(lp_player), true);
        if ((libUTES_gv_data_player[lp_player].lv_menu_mode == 1)) {
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_settings, true, PlayerGroupSingle(lp_player));
        }
        else {
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_settings, false, PlayerGroupSingle(lp_player));
        }
    }
    if (((libUTES_gv_data_player[lp_player].lv_creator_access == false) || (libUTES_gv_attack_mode == true))) {
        DialogControlSetEnabled(libUTES_gv_menu_mode_creator, PlayerGroupSingle(lp_player), false);
    }
    else {
        DialogControlSetEnabled(libUTES_gv_menu_mode_creator, PlayerGroupSingle(lp_player), true);
        if ((libUTES_gv_data_player[lp_player].lv_menu_mode == 2)) {
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_creator, true, PlayerGroupSingle(lp_player));
        }
        else {
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_creator, false, PlayerGroupSingle(lp_player));
        }
    }
    if ((libUTES_gv_attack_mode != false)) {
        DialogControlSetVisible(libUTES_gv_menu_creator_panel, PlayerGroupSingle(lp_player), false);
    }
    else {
        DialogControlSetVisible(libUTES_gv_menu_creator_panel, PlayerGroupSingle(lp_player), true);
        if ((libUTES_gv_data_player[lp_player].lv_creator_access == false)) {
            DialogControlSetEnabled(libUTES_gv_menu_creator_mirror, PlayerGroupSingle(lp_player), false);
            DialogControlSetEnabled(libUTES_gv_menu_creator_clear, PlayerGroupSingle(lp_player), false);
            DialogControlSetVisible(libUTES_gv_menu_start_attack, PlayerGroupSingle(lp_player), false);
        }
        else {
            DialogControlSetEnabled(libUTES_gv_menu_creator_mirror, PlayerGroupSingle(lp_player), true);
            DialogControlSetEnabled(libUTES_gv_menu_creator_clear, PlayerGroupSingle(lp_player), true);
            DialogControlSetVisible(libUTES_gv_menu_start_attack, PlayerGroupSingle(lp_player), true);
        }
    }
    if ((libUTES_gv_attack_mode != true)) {
        DialogControlSetVisible(libUTES_gv_menu_attack_panel, PlayerGroupSingle(lp_player), false);
        DialogControlSetVisible(libUTES_gv_menu_stop_attack, PlayerGroupSingle(lp_player), false);
        DialogControlSetVisible(libUTES_gv_menu_attack_attack, PlayerGroupSingle(lp_player), false);
    }
    else {
        DialogControlSetVisible(libUTES_gv_menu_attack_panel, PlayerGroupSingle(lp_player), true);
        libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_attack_pause, libUTES_gv_pause, PlayerGroupSingle(lp_player));
        if ((libUTES_gv_data_player[lp_player].lv_creator_access == false)) {
            DialogControlSetEnabled(libUTES_gv_menu_attack_reset, PlayerGroupSingle(lp_player), false);
            DialogControlSetEnabled(libUTES_gv_menu_attack_pause, PlayerGroupSingle(lp_player), false);
            DialogControlSetVisible(libUTES_gv_menu_stop_attack, PlayerGroupSingle(lp_player), false);
            DialogControlSetVisible(libUTES_gv_menu_attack_attack, PlayerGroupSingle(lp_player), false);
        }
        else {
            DialogControlSetEnabled(libUTES_gv_menu_attack_reset, PlayerGroupSingle(lp_player), true);
            DialogControlSetEnabled(libUTES_gv_menu_attack_pause, PlayerGroupSingle(lp_player), true);
            DialogControlSetVisible(libUTES_gv_menu_stop_attack, PlayerGroupSingle(lp_player), true);
            DialogControlSetVisible(libUTES_gv_menu_attack_attack, PlayerGroupSingle(lp_player), true);
        }
    }
    if (((libUTES_gv_attack_mode == true) || (libUTES_gv_data_player[lp_player].lv_menu_mode == 0))) {
        DialogControlSetVisible(libUTES_gv_tester_panel, PlayerGroupSingle(lp_player), false);
    }
    else {
        DialogControlSetVisible(libUTES_gv_tester_panel, PlayerGroupSingle(lp_player), true);
        if ((libUTES_gv_data_player[lp_player].lv_menu_mode != 1)) {
            DialogControlSetVisible(libUTES_gv_settings_panel, PlayerGroupSingle(lp_player), false);
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_settings, false, PlayerGroupSingle(lp_player));
        }
        else {
            DialogControlSetVisible(libUTES_gv_settings_panel, PlayerGroupSingle(lp_player), true);
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_settings, true, PlayerGroupSingle(lp_player));
            if ((libUTES_gv_vision == true)) {
                libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_visionbutton[0], false, PlayerGroupSingle(lp_player));
                libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_visionbutton[1], true, PlayerGroupSingle(lp_player));
            }
            else {
                libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_visionbutton[0], true, PlayerGroupSingle(lp_player));
                libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_visionbutton[1], false, PlayerGroupSingle(lp_player));
            }
            autoD42DC03D_var = 0;
            for ( ; autoD42DC03D_var <= autoD42DC03D_ae; autoD42DC03D_var += 1 ) {
                if ((libUTES_gv_terrain_index == autoD42DC03D_var)) {
                    libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_terrainbutton[autoD42DC03D_var], true, PlayerGroupSingle(lp_player));
                }
                else {
                    libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_terrainbutton[autoD42DC03D_var], false, PlayerGroupSingle(lp_player));
                }
            }
            auto973E0E1E_var = 1;
            for ( ; auto973E0E1E_var <= auto973E0E1E_ae; auto973E0E1E_var += 1 ) {
                libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][0], libUTES_gv_data_player[auto973E0E1E_var].lv_player_access[0], PlayerGroupSingle(lp_player));
                libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][1], libUTES_gv_data_player[auto973E0E1E_var].lv_player_access[1], PlayerGroupSingle(lp_player));
                libNtve_gf_SetDialogItemToggled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][2], libUTES_gv_data_player[auto973E0E1E_var].lv_creator_access, PlayerGroupSingle(lp_player));
                if ((PlayerType(auto973E0E1E_var) == c_playerTypeUser)) {
                    libNtve_gf_SetDialogItemText(libUTES_gv_settings_allianceplayerlabel[auto973E0E1E_var], PlayerName(auto973E0E1E_var), PlayerGroupSingle(lp_player));
                    libNtve_gf_SetDialogItemColor(libUTES_gv_settings_allianceplayerlabel[auto973E0E1E_var], libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(auto973E0E1E_var, false)), PlayerGroupSingle(lp_player));
                    DialogControlSetEnabled(libUTES_gv_settings_allianceplayerlabel[auto973E0E1E_var], PlayerGroupSingle(lp_player), true);
                    DialogControlSetEnabled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][0], PlayerGroupSingle(lp_player), true);
                    DialogControlSetEnabled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][1], PlayerGroupSingle(lp_player), true);
                    DialogControlSetEnabled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][2], PlayerGroupSingle(lp_player), true);
                }
                else {
                    libNtve_gf_SetDialogItemText(libUTES_gv_settings_allianceplayerlabel[auto973E0E1E_var], StringExternal("UI/BattleLobbyPlayerFrame/Empty"), PlayerGroupSingle(lp_player));
                    libNtve_gf_SetDialogItemColor(libUTES_gv_settings_allianceplayerlabel[auto973E0E1E_var], ColorWithAlpha(0,0,0,0), PlayerGroupSingle(lp_player));
                    DialogControlSetEnabled(libUTES_gv_settings_allianceplayerlabel[auto973E0E1E_var], PlayerGroupSingle(lp_player), false);
                    DialogControlSetEnabled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][0], PlayerGroupSingle(lp_player), false);
                    DialogControlSetEnabled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][1], PlayerGroupSingle(lp_player), false);
                    DialogControlSetEnabled(libUTES_gv_settings_alliancebuttons[auto973E0E1E_var][2], PlayerGroupSingle(lp_player), false);
                }
            }
        }
        if ((libUTES_gv_data_player[lp_player].lv_menu_mode != 2)) {
            DialogControlSetVisible(libUTES_gv_creator_panel, PlayerGroupSingle(lp_player), false);
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_creator, false, PlayerGroupSingle(lp_player));
        }
        else {
            DialogControlSetVisible(libUTES_gv_creator_panel, PlayerGroupSingle(lp_player), true);
            libNtve_gf_SetDialogItemToggled(libUTES_gv_menu_mode_creator, true, PlayerGroupSingle(lp_player));
            lv_side_ii = 0;
            for ( ; ( (auto9A6B9193_ai >= 0 && lv_side_ii <= auto9A6B9193_ae) || (auto9A6B9193_ai < 0 && lv_side_ii >= auto9A6B9193_ae) ) ; lv_side_ii += auto9A6B9193_ai ) {
                lv_tFaction = UserDataInstance("TFaction", (libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii] + 1));
                if ((libUTES_gv_data_player[lp_player].lv_creator_tech[lv_side_ii] == 0)) {
                    lv_card_ii = 0;
                    for ( ; ( (auto246CB870_ai >= 0 && lv_card_ii <= auto246CB870_ae) || (auto246CB870_ai < 0 && lv_card_ii >= auto246CB870_ae) ) ; lv_card_ii += auto246CB870_ai ) {
                        lv_unit = UserDataGetUnit("TFaction", lv_tFaction, "Unit", (lv_card_ii + 1));
                        if ((lv_unit == null)) {
                            DialogControlSetEnabled(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), false);
                            libNtve_gf_SetDialogItemTooltip(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], StringToText(""), PlayerGroupSingle(lp_player));
                            DialogControlSetVisible(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), false);
                        }
                        else {
                            DialogControlSetEnabled(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), true);
                            DialogControlSetEnabled(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), true);
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "name", StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, lv_unit, "Name", c_playerAny)));
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "min_icon", StringExternal("UI/Icon22_Minerals_Terr"));
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "min_val", IntToText(UnitTypeGetCost(lv_unit, c_unitCostMinerals)));
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "gas_icon", StringExternal("UI/Icon22_Vespene_Terr"));
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "gas_val", IntToText(UnitTypeGetCost(lv_unit, c_unitCostVespene)));
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "food_icon", StringExternal("UI/Icon22_Supply_Terr"));
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "food_val", FixedToTextAdvanced(UnitTypeGetProperty(lv_unit, c_unitPropSuppliesUsed), c_formatNumberStyleNormal, true, 0, 1));
                            TextExpressionSetToken("Param/Expression/lib_UTES_AC77FFD8", "desc", StringExternal(CatalogFieldValueGet(c_gameCatalogUnit, lv_unit, "Description", c_playerAny)));
                            libNtve_gf_SetDialogItemTooltip(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], TextExpressionAssemble("Param/Expression/lib_UTES_AC77FFD8"), PlayerGroupSingle(lp_player));
                            libNtve_gf_SetDialogItemImage(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], (CatalogFieldValueGet(c_gameCatalogActor, ((lv_unit)), "UnitIcon", lp_player)), PlayerGroupSingle(lp_player));
                            DialogControlSetVisible(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), true);
                        }
                    }
                }
                else {
                    lv_card_ii = 0;
                    for ( ; ( (auto3C006DE2_ai >= 0 && lv_card_ii <= auto3C006DE2_ae) || (auto3C006DE2_ai < 0 && lv_card_ii >= auto3C006DE2_ae) ) ; lv_card_ii += auto3C006DE2_ai ) {
                        if ((libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_upgrade[0] == null)) {
                            DialogControlSetEnabled(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), false);
                            libNtve_gf_SetDialogItemTooltip(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], StringToText(""), PlayerGroupSingle(lp_player));
                            DialogControlSetVisible(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), false);
                        }
                        else {
                            autoFC4B7638_ae = libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_levels;
                            lv_level_ii = 0;
                            for ( ; ( (autoFC4B7638_ai >= 0 && lv_level_ii <= autoFC4B7638_ae) || (autoFC4B7638_ai < 0 && lv_level_ii >= autoFC4B7638_ae) ) ; lv_level_ii += autoFC4B7638_ai ) {
                                if ((TechTreeUpgradeCount(libUTES_gv_side_player[lv_side_ii], libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_upgrade[lv_level_ii], c_techCountCompleteOnly) == 1)) {
                                    if ((lv_level_ii == libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_levels)) {
                                        libNtve_gf_SetDialogItemTooltip(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_tooltip[lv_level_ii], PlayerGroupSingle(lp_player));
                                        libNtve_gf_SetDialogItemImage(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_icon[lv_level_ii], PlayerGroupSingle(lp_player));
                                        DialogControlSetEnabled(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), false);
                                    }
                                    else {
                                        DialogControlSetEnabled(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), true);
                                    }
                                }
                                else {
                                    libNtve_gf_SetDialogItemTooltip(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_tooltip[lv_level_ii], PlayerGroupSingle(lp_player));
                                    libNtve_gf_SetDialogItemImage(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], libUTES_gv_data_upgrade[libUTES_gv_data_player[lp_player].lv_creator_race[lv_side_ii]][lv_card_ii].lv_icon[lv_level_ii], PlayerGroupSingle(lp_player));
                                    DialogControlSetEnabled(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), true);
                                    break;
                                }
                            }
                            DialogControlSetEnabled(libUTES_gv_creator_itembutton[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), true);
                            DialogControlSetVisible(libUTES_gv_creator_itemface[lv_side_ii][lv_card_ii], PlayerGroupSingle(lp_player), true);
                        }
                    }
                }
            }
        }
    }
    auto96E2DABE_var = 0;
    for ( ; auto96E2DABE_var <= auto96E2DABE_ae; auto96E2DABE_var += 1 ) {
        if ((libUTES_gv_data_player[lp_player].lv_player_access[auto96E2DABE_var] == false)) {
            if ((libUTES_gv_data_player[lp_player].lv_creator_access == true) && (libUTES_gv_attack_mode == false)) {
                libNtve_gf_SetAlliance(libUTES_gv_side_player[auto96E2DABE_var], lp_player, libNtve_ge_AllianceSetting_AllyWithSharedVision);
            }
            else {
                libNtve_gf_SetAlliance(libUTES_gv_side_player[auto96E2DABE_var], lp_player, libNtve_ge_AllianceSetting_Ally);
            }
        }
        else {
            libNtve_gf_SetAlliance(libUTES_gv_side_player[auto96E2DABE_var], lp_player, libNtve_ge_AllianceSetting_AllyWithSharedVisionControlAndSpending);
        }
    }
}

void libUTES_gf_RenderTesterUIForAllPlayers () {
    // Automatic Variable Declarations
    const int auto1C89AC1E_ae = libUTES_gv_const_players;
    int auto1C89AC1E_var;

    // Implementation
    auto1C89AC1E_var = 1;
    for ( ; auto1C89AC1E_var <= auto1C89AC1E_ae; auto1C89AC1E_var += 1 ) {
        if ((PlayerType(auto1C89AC1E_var) == c_playerTypeUser)) {
            libUTES_gf_RenderTesterUIForPlayer(auto1C89AC1E_var);
        }

    }
}

void libUTES_gf_CreatorAddUnits (int lp_player, int lp_side, string lp_unit) {
    // Automatic Variable Declarations
    const int auto0E7E5075_ae = libUTES_gv_const_players;
    int auto0E7E5075_var;
    unitgroup auto7A71D17A_g;
    int auto7A71D17A_u;
    unit auto7A71D17A_var;

    // Implementation
    if ((libUTES_gv_data_player[lp_player].lv_shift == true)) {
        libNtve_gf_CreateUnitsWithDefaultFacing(5, lp_unit, 0, libUTES_gv_side_player[lp_side], libUTES_gv_terrain.lv_spawnPoints[lp_side]);
    }
    else {
        libNtve_gf_CreateUnitsWithDefaultFacing(1, lp_unit, 0, libUTES_gv_side_player[lp_side], libUTES_gv_terrain.lv_spawnPoints[lp_side]);
    }
    auto0E7E5075_var = 1;
    for ( ; auto0E7E5075_var <= auto0E7E5075_ae; auto0E7E5075_var += 1 ) {
        UnitControlGroupAddUnits(auto0E7E5075_var, (lp_side+1), UnitLastCreatedGroup());
    }
    auto7A71D17A_g = UnitLastCreatedGroup();
    auto7A71D17A_u = UnitGroupCount(auto7A71D17A_g, c_unitCountAll);
    for (;; auto7A71D17A_u -= 1) {
        auto7A71D17A_var = UnitGroupUnitFromEnd(auto7A71D17A_g, auto7A71D17A_u);
        if (auto7A71D17A_var == null) { break; }
        libNtve_gf_MakeUnitUncommandable(auto7A71D17A_var, true);
    }
}

void libUTES_gf_CreatorAddUpgrade (int lp_side, structref<libUTES_gs_DATA_UPGRADE> lp_dataUpgrade) {
    // Automatic Variable Declarations
    int autoE834A13D_ae;
    int autoE834A13D_var;

    // Implementation
    autoE834A13D_ae = lp_dataUpgrade.lv_levels;
    autoE834A13D_var = 0;
    for ( ; autoE834A13D_var <= autoE834A13D_ae; autoE834A13D_var += 1 ) {
        if ((TechTreeUpgradeCount(libUTES_gv_side_player[lp_side], lp_dataUpgrade.lv_upgrade[autoE834A13D_var], c_techCountCompleteOnly) == 0)) {
            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[lp_side], lp_dataUpgrade.lv_upgrade[autoE834A13D_var], 1);
            break;
        }
        else {
            if ((TechTreeUpgradeCount(libUTES_gv_side_player[lp_side], lp_dataUpgrade.lv_upgrade[lp_dataUpgrade.lv_levels], c_techCountCompleteOnly) == 1)) {
                libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[lp_side], lp_dataUpgrade.lv_upgrade[autoE834A13D_var], 0);
            }

        }
    }
}

void libUTES_gf_DeleteAllTesterUnits () {
    // Variable Declarations
    int lv_index;
    bool lv_isBuilder;

    // Automatic Variable Declarations
    unitgroup auto25CF22A8_g;
    int auto25CF22A8_u;
    unit auto25CF22A8_var;
    const int auto0AF1C289_ae = 1;
    const int auto0AF1C289_ai = 1;
    const int auto99D79FBB_ae = libUTES_gv_tMAXFACTIONS;
    int auto99D79FBB_var;

    // Variable Initialization

    // Implementation
    libUTES_gf_RemoveNeutralStructures();
    auto25CF22A8_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
    auto25CF22A8_u = UnitGroupCount(auto25CF22A8_g, c_unitCountAll);
    for (;; auto25CF22A8_u -= 1) {
        auto25CF22A8_var = UnitGroupUnitFromEnd(auto25CF22A8_g, auto25CF22A8_u);
        if (auto25CF22A8_var == null) { break; }
        lv_isBuilder = false;
        lv_index = 0;
        for ( ; ( (auto0AF1C289_ai >= 0 && lv_index <= auto0AF1C289_ae) || (auto0AF1C289_ai < 0 && lv_index >= auto0AF1C289_ae) ) ; lv_index += auto0AF1C289_ai ) {
            auto99D79FBB_var = 0;
            for ( ; auto99D79FBB_var <= auto99D79FBB_ae; auto99D79FBB_var += 1 ) {
                if ((libUTES_gv_builder_unit[lv_index][auto99D79FBB_var] == null)) {
                    break;
                }

                if ((auto25CF22A8_var == libUTES_gv_builder_unit[lv_index][auto99D79FBB_var])) {
                    lv_isBuilder = true;
                    break;
                }

            }
        }
        if ((lv_isBuilder == false)) {
            while ((UnitCargo(auto25CF22A8_var, 1) != null)) {
                UnitRemove(UnitCargo(auto25CF22A8_var, 1));
            }
            UnitRemove(auto25CF22A8_var);
        }

    }
}

trigger auto_libUTES_gf_LoadTesterUnits_Trigger = null;
string auto_libUTES_gf_LoadTesterUnits_lp_storageString;
int auto_libUTES_gf_LoadTesterUnits_lp_owner;

void libUTES_gf_LoadTesterUnits (string lp_storageString, int lp_owner) {
    auto_libUTES_gf_LoadTesterUnits_lp_storageString = lp_storageString;
    auto_libUTES_gf_LoadTesterUnits_lp_owner = lp_owner;

    if (auto_libUTES_gf_LoadTesterUnits_Trigger == null) {
        auto_libUTES_gf_LoadTesterUnits_Trigger = TriggerCreate("auto_libUTES_gf_LoadTesterUnits_TriggerFunc");
    }

    TriggerExecute(auto_libUTES_gf_LoadTesterUnits_Trigger, false, false);
}

bool auto_libUTES_gf_LoadTesterUnits_TriggerFunc (bool testConds, bool runActions) {
    string lp_storageString = auto_libUTES_gf_LoadTesterUnits_lp_storageString;
    int lp_owner = auto_libUTES_gf_LoadTesterUnits_lp_owner;

    // Variable Declarations
    string lv_unit_type;
    fixed lv_x;
    fixed lv_y;
    int lv_ii;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_ii = 1;

    // Implementation
    while ((StringWord(lp_storageString, lv_ii) != null)) {
        lv_unit_type = UnitTypeFromString(StringWord(lp_storageString, lv_ii));
        lv_ii += 1;
        lv_x = StringToFixed(StringWord(lp_storageString, lv_ii));
        lv_ii += 1;
        lv_y = StringToFixed(StringWord(lp_storageString, lv_ii));
        lv_ii += 1;
        libNtve_gf_CreateUnitsWithDefaultFacing(1, lv_unit_type, 0, lp_owner, Point(lv_x, lv_y));
    }
    return true;
}

trigger auto_libUTES_gf_SaveTesterUnits_Trigger = null;

void libUTES_gf_SaveTesterUnits () {
    if (auto_libUTES_gf_SaveTesterUnits_Trigger == null) {
        auto_libUTES_gf_SaveTesterUnits_Trigger = TriggerCreate("auto_libUTES_gf_SaveTesterUnits_TriggerFunc");
    }

    TriggerExecute(auto_libUTES_gf_SaveTesterUnits_Trigger, false, false);
}

bool auto_libUTES_gf_SaveTesterUnits_TriggerFunc (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_string;
    string lv_unit_type;
    string lv_x;
    string lv_y;

    // Automatic Variable Declarations
    unitgroup auto4F7D64BF_g;
    int auto4F7D64BF_u;
    unit auto4F7D64BF_var;
    unitgroup auto22AB04CF_g;
    int auto22AB04CF_u;
    unit auto22AB04CF_var;
    unitgroup auto83C291B2_g;
    int auto83C291B2_u;
    unit auto83C291B2_var;

    // Variable Initialization
    lv_string = "";
    lv_unit_type = "";
    lv_x = "";
    lv_y = "";

    // Implementation
    auto4F7D64BF_g = UnitGroup(null, libUTES_gv_side_player[0], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto4F7D64BF_u = UnitGroupCount(auto4F7D64BF_g, c_unitCountAll);
    for (;; auto4F7D64BF_u -= 1) {
        auto4F7D64BF_var = UnitGroupUnitFromEnd(auto4F7D64BF_g, auto4F7D64BF_u);
        if (auto4F7D64BF_var == null) { break; }
        lv_unit_type = (UnitGetType(auto4F7D64BF_var));
        lv_x = FixedToString(PointGetX(UnitGetPosition(auto4F7D64BF_var)), c_fixedPrecisionAny);
        lv_y = FixedToString(PointGetY(UnitGetPosition(auto4F7D64BF_var)), c_fixedPrecisionAny);
        lv_string = (lv_string + lv_unit_type + " " + lv_x + " " + lv_y + " ");
    }
    libUTES_gv_unit_storage[0] = lv_string;
    lv_string = "";
    auto22AB04CF_g = UnitGroup(null, libUTES_gv_side_player[1], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto22AB04CF_u = UnitGroupCount(auto22AB04CF_g, c_unitCountAll);
    for (;; auto22AB04CF_u -= 1) {
        auto22AB04CF_var = UnitGroupUnitFromEnd(auto22AB04CF_g, auto22AB04CF_u);
        if (auto22AB04CF_var == null) { break; }
        lv_unit_type = (UnitGetType(auto22AB04CF_var));
        lv_x = FixedToString(PointGetX(UnitGetPosition(auto22AB04CF_var)), c_fixedPrecisionAny);
        lv_y = FixedToString(PointGetY(UnitGetPosition(auto22AB04CF_var)), c_fixedPrecisionAny);
        lv_string = (lv_string + lv_unit_type + " " + lv_x + " " + lv_y + " ");
    }
    libUTES_gv_unit_storage[1] = lv_string;
    lv_string = "";
    auto83C291B2_g = UnitGroup(null, 0, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0);
    auto83C291B2_u = UnitGroupCount(auto83C291B2_g, c_unitCountAll);
    for (;; auto83C291B2_u -= 1) {
        auto83C291B2_var = UnitGroupUnitFromEnd(auto83C291B2_g, auto83C291B2_u);
        if (auto83C291B2_var == null) { break; }
        lv_unit_type = (UnitGetType(auto83C291B2_var));
        lv_x = FixedToString(PointGetX(UnitGetPosition(auto83C291B2_var)), c_fixedPrecisionAny);
        lv_y = FixedToString(PointGetY(UnitGetPosition(auto83C291B2_var)), c_fixedPrecisionAny);
        lv_string = (lv_string + lv_unit_type + " " + lv_x + " " + lv_y + " ");
    }
    libUTES_gv_unit_storage[2] = lv_string;
    return true;
}

void libUTES_gf_ResetTesterUnits () {
    // Automatic Variable Declarations
    const int autoC2055AED_ae = libUTES_gv_const_players;
    int autoC2055AED_var;
    unitgroup auto32A1E4BF_g;
    int auto32A1E4BF_u;
    unit auto32A1E4BF_var;
    unitgroup auto4AFA7A6F_g;
    int auto4AFA7A6F_u;
    unit auto4AFA7A6F_var;
    int autoA34EBE8D_ae;
    int autoA34EBE8D_var;

    // Implementation
    libUTES_gf_DeleteAllTesterUnits();
    libUTES_gf_LoadTesterUnits(libUTES_gv_unit_storage[0], libUTES_gv_side_player[0]);
    libUTES_gf_LoadTesterUnits(libUTES_gv_unit_storage[1], libUTES_gv_side_player[1]);
    libUTES_gf_LoadTesterUnits(libUTES_gv_unit_storage[2], 0);
    autoC2055AED_var = 1;
    for ( ; autoC2055AED_var <= autoC2055AED_ae; autoC2055AED_var += 1 ) {
        UnitControlGroupAddUnits(autoC2055AED_var, 1, UnitGroup(null, libUTES_gv_side_player[0], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0));
        UnitControlGroupAddUnits(autoC2055AED_var, 2, UnitGroup(null, libUTES_gv_side_player[1], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0));
    }
    if ((libUTES_gv_attack_mode == false)) {
        auto32A1E4BF_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
        auto32A1E4BF_u = UnitGroupCount(auto32A1E4BF_g, c_unitCountAll);
        for (;; auto32A1E4BF_u -= 1) {
            auto32A1E4BF_var = UnitGroupUnitFromEnd(auto32A1E4BF_g, auto32A1E4BF_u);
            if (auto32A1E4BF_var == null) { break; }
            libNtve_gf_MakeUnitUncommandable(auto32A1E4BF_var, true);
        }
    }

    auto4AFA7A6F_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto4AFA7A6F_u = UnitGroupCount(auto4AFA7A6F_g, c_unitCountAll);
    for (;; auto4AFA7A6F_u -= 1) {
        auto4AFA7A6F_var = UnitGroupUnitFromEnd(auto4AFA7A6F_g, auto4AFA7A6F_u);
        if (auto4AFA7A6F_var == null) { break; }
        UnitSetPropertyFixed(auto4AFA7A6F_var, c_unitPropEnergyPercent, 100.0);
        autoA34EBE8D_ae = UnitAbilityCount(auto4AFA7A6F_var);
        autoA34EBE8D_var = 0;
        for ( ; autoA34EBE8D_var <= autoA34EBE8D_ae; autoA34EBE8D_var += 1 ) {
            if ((libNtve_gf_AbilityMatchesFilters(UnitAbilityGet(auto4AFA7A6F_var, autoA34EBE8D_var), UnitGetOwner(auto4AFA7A6F_var), c_classIdCAbilArmMagazine, "") == true)) {
                UnitSetProgressStage(auto4AFA7A6F_var, 1, c_unitProgressStageCancel);
                UnitMagazineArm(auto4AFA7A6F_var, AbilityCommand(UnitAbilityGet(auto4AFA7A6F_var, autoA34EBE8D_var), 0), (CatalogFieldValueGetAsInt(c_gameCatalogAbil, UnitAbilityGet(auto4AFA7A6F_var, autoA34EBE8D_var), "MaxCount", UnitGetOwner(auto4AFA7A6F_var))-CatalogFieldValueGetAsInt(c_gameCatalogAbil, UnitAbilityGet(auto4AFA7A6F_var, autoA34EBE8D_var), "InfoArray[" + IntToString(0) + "].CountStart", UnitGetOwner(auto4AFA7A6F_var))));
            }

        }
    }
    libUTES_gf_MovePlayerCameras();
    TimerRestart(libUTES_gv_test_timer);
}

void libUTES_gf_MirrorTesterUnitsByPlayer (int lp_player) {
    // Variable Declarations
    int lv_this_side;
    int lv_other_side;

    // Automatic Variable Declarations
    unitgroup auto14362BDB_g;
    int auto14362BDB_u;
    unit auto14362BDB_var;
    unitgroup autoBFC0B212_g;
    int autoBFC0B212_u;
    unit autoBFC0B212_var;
    const int auto5218D111_ae = libUTES_gv_const_players;
    int auto5218D111_var;

    // Variable Initialization
    lv_this_side = libUTES_gv_data_player[lp_player].lv_creator_side;

    // Implementation
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_C5E29F8C"));
    if ((lv_this_side == 0)) {
        lv_other_side = 1;
    }
    else {
        lv_other_side = 0;
    }
    auto14362BDB_g = UnitGroup(null, libUTES_gv_side_player[lv_other_side], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto14362BDB_u = UnitGroupCount(auto14362BDB_g, c_unitCountAll);
    for (;; auto14362BDB_u -= 1) {
        auto14362BDB_var = UnitGroupUnitFromEnd(auto14362BDB_g, auto14362BDB_u);
        if (auto14362BDB_var == null) { break; }
        libNtve_gf_ShowHideUnit(auto14362BDB_var, false);
        UnitKill(auto14362BDB_var);
    }
    Wait(0.0625, c_timeGame);
    autoBFC0B212_g = UnitGroup(null, libUTES_gv_side_player[lv_this_side], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    autoBFC0B212_u = UnitGroupCount(autoBFC0B212_g, c_unitCountAll);
    for (;; autoBFC0B212_u -= 1) {
        autoBFC0B212_var = UnitGroupUnitFromEnd(autoBFC0B212_g, autoBFC0B212_u);
        if (autoBFC0B212_var == null) { break; }
        libNtve_gf_CreateUnitsWithDefaultFacing(1, UnitGetType(autoBFC0B212_var), 0, libUTES_gv_side_player[lv_other_side], libUTES_gv_terrain.lv_spawnPoints[lv_other_side]);
        libNtve_gf_MakeUnitUncommandable(UnitLastCreated(), true);
        auto5218D111_var = 1;
        for ( ; auto5218D111_var <= auto5218D111_ae; auto5218D111_var += 1 ) {
            UnitControlGroupAddUnit(auto5218D111_var, (lv_other_side+1), UnitLastCreated());
        }
    }
    Wait(1.0, c_timeGame);
    UIClearMessages(PlayerGroupActive(), c_messageAreaSubtitle);
}

void libUTES_gf_LoadTerrainData (structref<libUTES_gs_DATA_TERRAIN> lp_dataTerrain) {
    // Variable Declarations
    int lv_ii;
    int lv_jj;

    // Automatic Variable Declarations
    const int auto5C29E108_ae = 1;
    const int auto5C29E108_ai = 1;
    int autoABE9B805_ae;
    const int autoABE9B805_ai = 1;
    unitgroup auto417B0C28_g;
    int auto417B0C28_u;
    unit auto417B0C28_var;
    unitgroup autoB8A36F33_g;
    int autoB8A36F33_u;
    unit autoB8A36F33_var;

    // Variable Initialization

    // Implementation
    libUTES_gv_terrain.lv_region = lp_dataTerrain.lv_region;
    libUTES_gv_terrain.lv_spawnPoints[0] = lp_dataTerrain.lv_spawnPoints[0];
    libUTES_gv_terrain.lv_spawnPoints[1] = lp_dataTerrain.lv_spawnPoints[1];
    libUTES_gv_terrain.lv_spawnPoints[2] = lp_dataTerrain.lv_spawnPoints[2];
    CameraSetBounds(PlayerGroupActive(), libUTES_gv_terrain.lv_region, true);
    libUTES_gf_MovePlayerCameras();
    lv_ii = 0;
    for ( ; ( (auto5C29E108_ai >= 0 && lv_ii <= auto5C29E108_ae) || (auto5C29E108_ai < 0 && lv_ii >= auto5C29E108_ae) ) ; lv_ii += auto5C29E108_ai ) {
        autoABE9B805_ae = (libUTES_gv_buildersTotal - 1);
        lv_jj = 0;
        for ( ; ( (autoABE9B805_ai >= 0 && lv_jj <= autoABE9B805_ae) || (autoABE9B805_ai < 0 && lv_jj >= autoABE9B805_ae) ) ; lv_jj += autoABE9B805_ai ) {
            UnitSetPosition(libUTES_gv_builder_unit[lv_ii][lv_jj], PointWithOffset(libUTES_gv_terrain.lv_spawnPoints[2], UnitGetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 2), UnitGetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 3)), false);
            UnitSetFacing(libUTES_gv_builder_unit[lv_ii][lv_jj], UnitGetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 4), 0.0);
        }
    }
    libUTES_gf_RestoreMapStructures();
    auto417B0C28_g = UnitGroup(null, libUTES_gv_side_player[0], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto417B0C28_u = UnitGroupCount(auto417B0C28_g, c_unitCountAll);
    for (;; auto417B0C28_u -= 1) {
        auto417B0C28_var = UnitGroupUnitFromEnd(auto417B0C28_g, auto417B0C28_u);
        if (auto417B0C28_var == null) { break; }
        UnitSetPosition(auto417B0C28_var, libUTES_gv_terrain.lv_spawnPoints[0], false);
    }
    autoB8A36F33_g = UnitGroup(null, libUTES_gv_side_player[1], RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    autoB8A36F33_u = UnitGroupCount(autoB8A36F33_g, c_unitCountAll);
    for (;; autoB8A36F33_u -= 1) {
        autoB8A36F33_var = UnitGroupUnitFromEnd(autoB8A36F33_g, autoB8A36F33_u);
        if (autoB8A36F33_var == null) { break; }
        UnitSetPosition(autoB8A36F33_var, libUTES_gv_terrain.lv_spawnPoints[1], false);
    }
}

void libUTES_gf_MovePlayerCameras () {
    // Automatic Variable Declarations
    playergroup auto62364E34_g;
    int auto62364E34_var;

    // Implementation
    auto62364E34_g = PlayerGroupActive();
    auto62364E34_var = -1;
    while (true) {
        auto62364E34_var = PlayerGroupNextPlayer(auto62364E34_g, auto62364E34_var);
        if (auto62364E34_var < 0) { break; }
        CameraPan(auto62364E34_var, MidPoint(libUTES_gv_terrain.lv_spawnPoints[0], libUTES_gv_terrain.lv_spawnPoints[1]), 1.0, -1, 10, false);
    }
}

bool libUTES_gf_TesterLeaderboardValidUnitType (string lp_unitType) {
    // Automatic Variable Declarations
    // Implementation
    if (((UnitTypeTestFlag(lp_unitType, c_unitFlagInvulnerable) == true) || (UnitTypeTestFlag(lp_unitType, c_unitFlagMissile) == true) || (lp_unitType == "Larva") || (lp_unitType == "BroodlingEscort") || (lp_unitType == "CreepTumor") || (lp_unitType == "CreepTumorBurrowed") || (lp_unitType == "Broodling") || (lp_unitType == "Interceptor") || (lp_unitType == "Elytron") || (lp_unitType == "Nuke") || (lp_unitType == "SupplyDepotLowered") || (lp_unitType == "DestructibleRock4x4"))) {
        return false;
    }
    else {
        return true;
    }
}

void libUTES_gf_TesterLeaderboardSpecialUnitCost (string lp_unitType, int lp_column, bool lp_deleteMode) {
    // Variable Declarations
    int lv_minerals_mod;
    int lv_gas_mod;

    // Automatic Variable Declarations
    string auto9E371B07_val;

    // Variable Initialization

    // Implementation
    auto9E371B07_val = lp_unitType;
    if (auto9E371B07_val == "Carrier") {
        lv_minerals_mod = ((CatalogFieldValueGetAsInt(c_gameCatalogAbil, "CarrierHangar", "MaxCount", c_playerAny)-CatalogFieldValueGetAsInt(c_gameCatalogAbil, "CarrierHangar", "InfoArray[" + IntToString(0) + "].CountStart", c_playerAny))*UnitTypeGetCost((CatalogFieldValueGet(c_gameCatalogAbil, "CarrierHangar", "InfoArray[" + IntToString(0) + "].Unit", c_playerAny)), c_unitCostMinerals));
        lv_gas_mod = ((CatalogFieldValueGetAsInt(c_gameCatalogAbil, "CarrierHangar", "MaxCount", c_playerAny)-CatalogFieldValueGetAsInt(c_gameCatalogAbil, "CarrierHangar", "InfoArray[" + IntToString(0) + "].CountStart", c_playerAny))*UnitTypeGetCost((CatalogFieldValueGet(c_gameCatalogAbil, "CarrierHangar", "InfoArray[" + IntToString(0) + "].Unit", c_playerAny)), c_unitCostVespene));
    }
    else if (auto9E371B07_val == "Myriad") {
        lv_minerals_mod = ((CatalogFieldValueGetAsInt(c_gameCatalogAbil, "ElytraHangar", "MaxCount", c_playerAny)-CatalogFieldValueGetAsInt(c_gameCatalogAbil, "ElytraHangar", "InfoArray[" + IntToString(0) + "].CountStart", c_playerAny))*UnitTypeGetCost((CatalogFieldValueGet(c_gameCatalogAbil, "ElytraHangar", "InfoArray[" + IntToString(0) + "].Unit", c_playerAny)), c_unitCostMinerals));
        lv_gas_mod = ((CatalogFieldValueGetAsInt(c_gameCatalogAbil, "ElytraHangar", "MaxCount", c_playerAny)-CatalogFieldValueGetAsInt(c_gameCatalogAbil, "ElytraHangar", "InfoArray[" + IntToString(0) + "].CountStart", c_playerAny))*UnitTypeGetCost((CatalogFieldValueGet(c_gameCatalogAbil, "ElytraHangar", "InfoArray[" + IntToString(0) + "].Unit", c_playerAny)), c_unitCostVespene));
    }
    else {
    }
    if ((lp_deleteMode == true)) {
        lv_minerals_mod *= -1;
        lv_gas_mod *= -1;
    }

    libUTES_gv_leaderboard_minerals[lp_column] += lv_minerals_mod;
    libUTES_gv_leaderboard_gas[lp_column] += lv_gas_mod;
}

void libUTES_gf_TesterLeaderboardCreate () {
    // Variable Declarations
    int lv_main_background_image;
    int lv_header_background_image;
    int lv_col;
    int lv_row;

    // Automatic Variable Declarations
    const int autoA326D51D_ae = 2;
    const int autoA326D51D_ai = 1;
    const int auto64888C09_ae = 21;
    const int auto64888C09_ai = 1;

    // Variable Initialization
    lv_main_background_image = c_invalidDialogControlId;
    lv_header_background_image = c_invalidDialogControlId;

    // Implementation
    BoardDestroy(libUTES_gv_leaderboard);
    DataTableClear(true);
    libUTES_gv_leaderboard_rows = 4;
    libUTES_gv_leaderboard_minerals[1] = 0;
    libUTES_gv_leaderboard_minerals[2] = 0;
    libUTES_gv_leaderboard_gas[1] = 0;
    libUTES_gv_leaderboard_gas[2] = 0;
    lv_col = 1;
    for ( ; ( (autoA326D51D_ai >= 0 && lv_col <= autoA326D51D_ae) || (autoA326D51D_ai < 0 && lv_col >= autoA326D51D_ae) ) ; lv_col += autoA326D51D_ai ) {
        lv_row = 5;
        for ( ; ( (auto64888C09_ai >= 0 && lv_row <= auto64888C09_ae) || (auto64888C09_ai < 0 && lv_row >= auto64888C09_ae) ) ; lv_row += auto64888C09_ai ) {
            libUTES_gv_leaderboard_icon_flag[lv_col][lv_row] = false;
        }
    }
    BoardCreate(2, libUTES_gv_leaderboard_rows, StringExternal("Param/Value/lib_UTES_9469DCCF"), Color(100.00, 100.00, 100.00));
    libUTES_gv_leaderboard = BoardLastCreated();
    BoardItemSetAlignment(BoardLastCreated(), c_boardItemAll, c_boardItemAll, c_alignCenter);
    BoardItemSetText(BoardLastCreated(), 1, c_boardRowHeader, StringExternal("Param/Value/lib_UTES_75DED011"));
    BoardItemSetText(BoardLastCreated(), 2, c_boardRowHeader, StringExternal("Param/Value/lib_UTES_25397E08"));
    BoardSetColumnWidth(BoardLastCreated(), 1, c_boardWidthAuto);
    BoardSetColumnWidth(BoardLastCreated(), 2, c_boardWidthAuto);
    BoardItemSetText(BoardLastCreated(), 1, 1, StringToText("0"));
    BoardItemSetText(BoardLastCreated(), 2, 1, StringToText("0"));
    BoardItemSetTextColor(BoardLastCreated(), 1, 1, Color(0.00, 100.00, 100.00));
    BoardItemSetTextColor(BoardLastCreated(), 2, 1, Color(0.00, 100.00, 100.00));
    BoardItemSetText(BoardLastCreated(), 1, 2, StringToText("0"));
    BoardItemSetText(BoardLastCreated(), 2, 2, StringToText("0"));
    BoardItemSetTextColor(BoardLastCreated(), 1, 2, Color(0.00, 100.00, 25.10));
    BoardItemSetTextColor(BoardLastCreated(), 2, 2, Color(0.00, 100.00, 25.10));
    BoardItemSetText(BoardLastCreated(), 1, 3, StringToText("0"));
    BoardItemSetText(BoardLastCreated(), 2, 3, StringToText("0"));
    BoardItemSetTextColor(BoardLastCreated(), 1, 3, Color(100.00, 50.20, 0.00));
    BoardItemSetTextColor(BoardLastCreated(), 2, 3, Color(100.00, 50.20, 0.00));
}

int libUTES_gf_TesterLeaderboardAddRow (string lp_unitName) {
    // Automatic Variable Declarations
    // Implementation
    if ((libUTES_gv_leaderboard_rows < 21)) {
        libUTES_gv_leaderboard_rows += 1;
        BoardSetRowCount(libUTES_gv_leaderboard, libUTES_gv_leaderboard_rows);
    }

    DataTableSetInt(true, lp_unitName, libUTES_gv_leaderboard_rows);
    return libUTES_gv_leaderboard_rows;
}

string libUTES_gf_TesterLeaderboardStructureUnitTypeToIcon (string lp_unitType) {
    // Variable Declarations
    string lv_unit_type_string_words;
    string lv_unit_type_string_word;
    string lv_unit_type_stringword;
    string lv_race_string;

    // Automatic Variable Declarations
    string auto2DAB4DCF_val;

    // Variable Initialization
    lv_unit_type_string_words = "";
    lv_unit_type_string_word = "";
    lv_unit_type_stringword = "";
    lv_race_string = "";

    // Implementation
    lv_unit_type_string_words = (lp_unitType);
    lv_unit_type_string_word = StringReplaceWord(lv_unit_type_string_words, " ", "", c_stringReplaceAll, c_stringCase);
    lv_unit_type_stringword = StringCase(lv_unit_type_string_word, false);
    lv_race_string = CatalogFieldValueGet(c_gameCatalogUnit, lv_unit_type_string_words, "Race", c_playerAny);
    auto2DAB4DCF_val = lv_race_string;
    if (auto2DAB4DCF_val == "Prot") {
        lv_race_string = "protoss";
    }
    else if (auto2DAB4DCF_val == "Terr") {
        lv_race_string = "terran";
    }
    else if (auto2DAB4DCF_val == "Zerg") {
        lv_race_string = "zerg";
    }
    else if (auto2DAB4DCF_val == "Keir") {
        lv_race_string = "keiron";
    }
    else if (auto2DAB4DCF_val == "Gen") {
        lv_race_string = "genetron";
    }
    else if (auto2DAB4DCF_val == "Xayi") {
        lv_race_string = "xayid";
    }
    else {
    }
    return "Assets\\Textures\\btn-building-" + lv_race_string + "-" + lv_unit_type_stringword + ".dds";
}

trigger auto_libUTES_gf_TesterLeaderboardAddIcon_Trigger = null;
string auto_libUTES_gf_TesterLeaderboardAddIcon_lp_unitType;
int auto_libUTES_gf_TesterLeaderboardAddIcon_lp_column;
int auto_libUTES_gf_TesterLeaderboardAddIcon_lp_row;

void libUTES_gf_TesterLeaderboardAddIcon (string lp_unitType, int lp_column, int lp_row) {
    auto_libUTES_gf_TesterLeaderboardAddIcon_lp_unitType = lp_unitType;
    auto_libUTES_gf_TesterLeaderboardAddIcon_lp_column = lp_column;
    auto_libUTES_gf_TesterLeaderboardAddIcon_lp_row = lp_row;

    if (auto_libUTES_gf_TesterLeaderboardAddIcon_Trigger == null) {
        auto_libUTES_gf_TesterLeaderboardAddIcon_Trigger = TriggerCreate("auto_libUTES_gf_TesterLeaderboardAddIcon_TriggerFunc");
    }

    TriggerExecute(auto_libUTES_gf_TesterLeaderboardAddIcon_Trigger, false, false);
}

bool auto_libUTES_gf_TesterLeaderboardAddIcon_TriggerFunc (bool testConds, bool runActions) {
    string lp_unitType = auto_libUTES_gf_TesterLeaderboardAddIcon_lp_unitType;
    int lp_column = auto_libUTES_gf_TesterLeaderboardAddIcon_lp_column;
    int lp_row = auto_libUTES_gf_TesterLeaderboardAddIcon_lp_row;

    // Variable Declarations
    int lv_ii;
    int lv_jj;

    // Automatic Variable Declarations
    // Variable Initialization

    // Implementation
    if ((UnitTypeTestAttribute(lp_unitType, c_unitAttributeStructure) == false)) {
        BoardItemSetIcon(libUTES_gv_leaderboard, lp_column, lp_row, (CatalogFieldValueGet(c_gameCatalogActor, ((lp_unitType)), "UnitIcon", c_playerAny)), true);
        libUTES_gv_leaderboard_icon_flag[lp_column][lp_row] = true;
    }
    else {
        BoardItemSetIcon(libUTES_gv_leaderboard, lp_column, lp_row, libUTES_gf_TesterLeaderboardStructureUnitTypeToIcon(lp_unitType), true);
        libUTES_gv_leaderboard_icon_flag[lp_column][lp_row] = true;
    }
    return true;
}

// Triggers
//--------------------------------------------------------------------------------------------------
// Trigger: Initialize Unit Tester Interface
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_InitializeUnitTesterInterface_Func (bool testConds, bool runActions) {
    int init_i;

    // Variable Declarations
    int lv_ii;
    int lv_jj;
    string[2] lv_side_str;
    int lv_offsetX;
    int lv_offsetY;
    int lv_x;
    int lv_y;
    int lv_z;
    int lv_levels;
    string lv_regionID;
    int lv_image;
    int lv_side_panel;
    int lv_buttons_panel;
    string lv_faction;
    string lv_button;
    string lv_upgrade;
    string lv_unit;
    abilcmd lv_ability;
    string lv_race;
    int lv_race_index;
    int lv_upgradeIter;
    int lv_upgradeLevel;
    string lv_tLevelUpgrade;
    string lv_tFaction;
    int lv_activeUpgrades;
    string lv_builderType;
    unit lv_builderUnit;

    // Automatic Variable Declarations
    int auto10306AE0_ae;
    int auto10306AE0_var;
    int autoDE840288_ae;
    const int autoDE840288_ai = 1;
    int auto803D37A3_ae;
    const int auto803D37A3_ai = 1;
    int auto8959577E_ae;
    const int auto8959577E_ai = 1;
    int autoF2E08A24_ae;
    const int autoF2E08A24_ai = 1;
    int auto266E816F_ae;
    const int auto266E816F_ai = 1;
    const int autoEE612A24_ae = 1;
    const int autoEE612A24_ai = 1;
    int auto85B0B7D1_ae;
    int auto85B0B7D1_var;
    const int auto26D7AF4E_ae = libUTES_gv_const_card_length;
    const int auto26D7AF4E_ai = 1;
    const int auto86E42EDB_ae = 1;
    const int auto86E42EDB_ai = 1;
    int auto6ABA4F93_ae;
    const int auto6ABA4F93_ai = 1;
    const int autoC05CF7B9_ae = libUTES_gv_const_players;
    int autoC05CF7B9_var;
    unitgroup auto272FD0CC_g;
    int auto272FD0CC_u;
    unit auto272FD0CC_var;
    playergroup auto9E654153_g;
    int auto9E654153_var;

    // Variable Initialization
    for (init_i = 0; init_i <= 1; init_i += 1) {
        lv_side_str[init_i] = "";
    }
    lv_offsetX = 10;
    lv_offsetY = -60;
    lv_regionID = "";
    lv_image = c_invalidDialogControlId;
    lv_side_panel = c_invalidDialogControlId;
    lv_buttons_panel = c_invalidDialogControlId;
    lv_race = "";

    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_wORKERSPOINT = PointFromName("workers");
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeErrorDisplayPanel, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeResourcePanel, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeSupply, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeAllianceButton, false);
    UISetFrameVisible(PlayerGroupAll(), c_syncFrameTypeTeamResourceButton, false);
    libUTES_gf_AddTerrainData("terr0");
    libUTES_gf_AddTerrainData("terr1");
    libUTES_gf_AddTerrainData("terr2");
    libUTES_gf_AddTerrainData("terr3");
    libUTES_gf_AddTerrainData("terr4");
    libUTES_gf_AddTerrainData("terr5");
    libUTES_gf_AddTerrainData("terr6");
    libUTES_gf_AddTerrainData("terr8");
    libUTES_gf_AddTerrainData("terr9");
    lv_race_index = 0;
    auto10306AE0_ae = UserDataInstanceCount("TFaction");
    auto10306AE0_var = 1;
    for ( ; auto10306AE0_var <= auto10306AE0_ae; auto10306AE0_var += 1 ) {
        lv_tFaction = UserDataInstance("TFaction", auto10306AE0_var);
        if ((UserDataGetInt("TFaction", lv_faction, "Hidden", 1) != 0)) {
            continue;
        }

        lv_activeUpgrades = 0;
        autoDE840288_ae = UserDataFieldValueCount("TFaction", "LevelledUpgrades");
        lv_upgradeIter = 1;
        for ( ; ( (autoDE840288_ai >= 0 && lv_upgradeIter <= autoDE840288_ae) || (autoDE840288_ai < 0 && lv_upgradeIter >= autoDE840288_ae) ) ; lv_upgradeIter += autoDE840288_ai ) {
            lv_tLevelUpgrade = UserDataGetUserInstance("TFaction", lv_tFaction, "LevelledUpgrades", lv_upgradeIter);
            lv_upgrade = UserDataGetUpgrade("TLevelUpgrades", lv_tLevelUpgrade, "Upgrade", 1);
            if ((lv_upgrade == null)) {
                continue;
            }

            libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_levels = (UserDataGetInt("TLevelUpgrades", lv_tLevelUpgrade, "Levels", 1) - 1);
            auto803D37A3_ae = UserDataFieldValueCount("TLevelUpgrades", "Upgrade");
            lv_upgradeLevel = 1;
            for ( ; ( (auto803D37A3_ai >= 0 && lv_upgradeLevel <= auto803D37A3_ae) || (auto803D37A3_ai < 0 && lv_upgradeLevel >= auto803D37A3_ae) ) ; lv_upgradeLevel += auto803D37A3_ai ) {
                lv_upgrade = UserDataGetUpgrade("TLevelUpgrades", lv_tLevelUpgrade, "Upgrade", lv_upgradeLevel);
                if ((CatalogEntryIsValid(c_gameCatalogUpgrade, lv_upgrade) == false)) {
                    if ((lv_upgrade != null)) {
                        TextExpressionSetToken("Param/Expression/lib_UTES_2C1B3886", "A", StringToText((lv_upgrade)));
                        TriggerDebugOutput(1, TextExpressionAssemble("Param/Expression/lib_UTES_2C1B3886"), true);
                    }

                    break;
                }
                else {
                    libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_upgrade[(lv_upgradeLevel - 1)] = lv_upgrade;
                    libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_icon[(lv_upgradeLevel - 1)] = (CatalogFieldValueGet(c_gameCatalogUpgrade, lv_upgrade, "Icon", c_playerAny));
                    lv_ability = TechTreeUpgradeProducedAbilCmd(lv_upgrade, 0);
                    if ((lv_ability != null)) {
                        lv_button = (CatalogFieldValueGet(c_gameCatalogAbil, AbilityCommandGetAbility(lv_ability), "InfoArray[" + IntToString(AbilityCommandGetCommand(lv_ability)) + "].Button.DefaultButtonFace", c_playerAny));
                        TextExpressionSetToken("Param/Expression/lib_UTES_7FC9E5D2", "name", StringExternal(CatalogFieldValueGet(c_gameCatalogButton, lv_button, "Name", c_playerAny)));
                        TextExpressionSetToken("Param/Expression/lib_UTES_7FC9E5D2", "min_icon", StringExternal("UI/Icon22_Minerals_Terr"));
                        TextExpressionSetToken("Param/Expression/lib_UTES_7FC9E5D2", "min_val", IntToText(CatalogFieldValueGetAsInt(c_gameCatalogAbil, AbilityCommandGetAbility(lv_ability), "InfoArray[" + IntToString(AbilityCommandGetCommand(lv_ability)) + "].Resource[" + IntToString(0) + "]", c_playerAny)));
                        TextExpressionSetToken("Param/Expression/lib_UTES_7FC9E5D2", "gas_icon", StringExternal("UI/Icon22_Vespene_Terr"));
                        TextExpressionSetToken("Param/Expression/lib_UTES_7FC9E5D2", "gas_val", IntToText(CatalogFieldValueGetAsInt(c_gameCatalogAbil, AbilityCommandGetAbility(lv_ability), "InfoArray[" + IntToString(AbilityCommandGetCommand(lv_ability)) + "].Resource[" + IntToString(1) + "]", c_playerAny)));
                        TextExpressionSetToken("Param/Expression/lib_UTES_7FC9E5D2", "desc", StringExternal(CatalogFieldValueGet(c_gameCatalogButton, lv_button, "Tooltip", c_playerAny)));
                        libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_tooltip[(lv_upgradeLevel - 1)] = TextExpressionAssemble("Param/Expression/lib_UTES_7FC9E5D2");
                    }
                    else {
                        TextExpressionSetToken("Param/Expression/lib_UTES_6D57F28F", "name", StringExternal(CatalogFieldValueGet(c_gameCatalogUpgrade, lv_upgrade, "Name", c_playerAny)));
                        libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_tooltip[(lv_upgradeLevel - 1)] = TextExpressionAssemble("Param/Expression/lib_UTES_6D57F28F");
                    }
                }
            }
            lv_activeUpgrades += 1;
        }
        auto8959577E_ae = UserDataFieldValueCount("TFaction", "Upgrade");
        lv_upgradeIter = 1;
        for ( ; ( (auto8959577E_ai >= 0 && lv_upgradeIter <= auto8959577E_ae) || (auto8959577E_ai < 0 && lv_upgradeIter >= auto8959577E_ae) ) ; lv_upgradeIter += auto8959577E_ai ) {
            lv_upgrade = UserDataGetUpgrade("TFaction", lv_tFaction, "Upgrade", lv_upgradeIter);
            if ((lv_upgrade == null)) {
                continue;
            }

            if ((lv_activeUpgrades > 27)) {
                TriggerDebugOutput(1, TextExpressionAssemble("Param/Expression/lib_UTES_FACCDEDF"), true);
                break;
            }

            if ((CatalogEntryIsValid(c_gameCatalogUpgrade, lv_upgrade) == false)) {
                TextExpressionSetToken("Param/Expression/lib_UTES_82FD541F", "A", StringToText((lv_upgrade)));
                TriggerDebugOutput(1, TextExpressionAssemble("Param/Expression/lib_UTES_82FD541F"), true);
                continue;
            }

            libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_upgrade[0] = lv_upgrade;
            libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_icon[0] = (CatalogFieldValueGet(c_gameCatalogUpgrade, lv_upgrade, "Icon", c_playerAny));
            lv_ability = TechTreeUpgradeProducedAbilCmd(lv_upgrade, 0);
            if ((lv_ability != null)) {
                lv_button = (CatalogFieldValueGet(c_gameCatalogAbil, AbilityCommandGetAbility(lv_ability), "InfoArray[" + IntToString(AbilityCommandGetCommand(lv_ability)) + "].Button.DefaultButtonFace", c_playerAny));
                TextExpressionSetToken("Param/Expression/lib_UTES_6DEEDFC9", "name", StringExternal(CatalogFieldValueGet(c_gameCatalogButton, lv_button, "Name", c_playerAny)));
                TextExpressionSetToken("Param/Expression/lib_UTES_6DEEDFC9", "min_icon", StringExternal("UI/Icon22_Minerals_Terr"));
                TextExpressionSetToken("Param/Expression/lib_UTES_6DEEDFC9", "min_val", IntToText(CatalogFieldValueGetAsInt(c_gameCatalogAbil, AbilityCommandGetAbility(lv_ability), "InfoArray[" + IntToString(AbilityCommandGetCommand(lv_ability)) + "].Resource[" + IntToString(0) + "]", c_playerAny)));
                TextExpressionSetToken("Param/Expression/lib_UTES_6DEEDFC9", "gas_icon", StringExternal("UI/Icon22_Vespene_Terr"));
                TextExpressionSetToken("Param/Expression/lib_UTES_6DEEDFC9", "gas_val", IntToText(CatalogFieldValueGetAsInt(c_gameCatalogAbil, AbilityCommandGetAbility(lv_ability), "InfoArray[" + IntToString(AbilityCommandGetCommand(lv_ability)) + "].Resource[" + IntToString(1) + "]", c_playerAny)));
                TextExpressionSetToken("Param/Expression/lib_UTES_6DEEDFC9", "desc", StringExternal(CatalogFieldValueGet(c_gameCatalogButton, lv_button, "Tooltip", c_playerAny)));
                libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_tooltip[0] = TextExpressionAssemble("Param/Expression/lib_UTES_6DEEDFC9");
            }
            else {
                TextExpressionSetToken("Param/Expression/lib_UTES_414BD2C1", "name", StringExternal(CatalogFieldValueGet(c_gameCatalogUpgrade, lv_upgrade, "Name", c_playerAny)));
                libUTES_gv_data_upgrade[lv_race_index][lv_activeUpgrades].lv_tooltip[0] = TextExpressionAssemble("Param/Expression/lib_UTES_414BD2C1");
            }
            lv_activeUpgrades += 1;
        }
        autoF2E08A24_ae = UserDataFieldValueCount("TFaction", "Unit");
        lv_upgradeIter = 1;
        for ( ; ( (autoF2E08A24_ai >= 0 && lv_upgradeIter <= autoF2E08A24_ae) || (autoF2E08A24_ai < 0 && lv_upgradeIter >= autoF2E08A24_ae) ) ; lv_upgradeIter += autoF2E08A24_ai ) {
            lv_unit = UserDataGetUnit("TFaction", lv_faction, "Unit", 1);
            if ((lv_unit == null)) {
                continue;
            }

        }
        lv_race_index += 1;
    }
    libUTES_gv_tester_menu = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/TesterMenu");
    libUTES_gv_tester_panel = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/TesterPanel");
    libUTES_gv_menu_mode_settings = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/Modes/Settings");
    libUTES_gv_menu_mode_creator = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/Modes/Creator");
    libUTES_gv_menu_creator_panel = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/TesterMenu/CreatorMenu");
    libUTES_gv_menu_creator_mirror = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/CreatorMenu/Mirror");
    libUTES_gv_menu_creator_clear = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/CreatorMenu/Clear");
    libUTES_gv_menu_attack_panel = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/TesterMenu/AttackMenu");
    libUTES_gv_menu_attack_pause = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/AttackMenu/Pause");
    libUTES_gv_menu_attack_reset = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/AttackMenu/Reset");
    libUTES_gv_menu_start_attack = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/StartButton");
    libUTES_gv_menu_stop_attack = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/StopButton");
    libUTES_gv_menu_attack_attack = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterMenu/AttackButton");
    lv_side_str[0] = "Red";
    lv_side_str[1] = "Blue";
    libUTES_gv_settings_panel = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel");
    libUTES_gv_settings_upgradebutton[0] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/UpgradeLevel/Level0");
    libUTES_gv_settings_upgradebutton[1] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/UpgradeLevel/Level1");
    libUTES_gv_settings_upgradebutton[2] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/UpgradeLevel/Level2");
    libUTES_gv_settings_upgradebutton[3] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/UpgradeLevel/Level3");
    libUTES_gv_settings_researchbutton[0] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/Research/Off");
    libUTES_gv_settings_researchbutton[1] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/Research/On");
    libUTES_gv_settings_visionbutton[0] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/Vision/Off");
    libUTES_gv_settings_visionbutton[1] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, "UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/Vision/On");
    auto266E816F_ae = (libUTES_gv_const_terrains - 1);
    lv_ii = 0;
    for ( ; ( (auto266E816F_ai >= 0 && lv_ii <= auto266E816F_ae) || (auto266E816F_ai < 0 && lv_ii >= auto266E816F_ae) ) ; lv_ii += auto266E816F_ai ) {
        libUTES_gv_settings_terrainbutton[lv_ii] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, ("UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListLeft/Terrain/Buttons/Terrain" + IntToString(lv_ii)));
    }
    libUTES_gv_creator_panel = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, "UIContainer/FullscreenUpperContainer/TesterPanel/CreatorPanel");
    lv_ii = 0;
    for ( ; ( (autoEE612A24_ai >= 0 && lv_ii <= autoEE612A24_ae) || (autoEE612A24_ai < 0 && lv_ii >= autoEE612A24_ae) ) ; lv_ii += autoEE612A24_ai ) {
        libUTES_gv_factionsTotal = 0;
        libUTES_gv_buildersTotal = 0;
        lv_x = 0;
        lv_y = 0;
        lv_z = 0;
        auto85B0B7D1_ae = UserDataInstanceCount("TFaction");
        auto85B0B7D1_var = 1;
        for ( ; auto85B0B7D1_var <= auto85B0B7D1_ae; auto85B0B7D1_var += 1 ) {
            lv_faction = UserDataInstance("TFaction", auto85B0B7D1_var);
            if ((UserDataGetInt("TFaction", lv_faction, "Hidden", 1) != 0)) {
                continue;
            }

            lv_side_panel = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, ("UIContainer/FullscreenUpperContainer/TesterPanel/CreatorPanel/RaceList_" + lv_side_str[lv_ii]));
            DialogControlCreateInPanelFromTemplate(lv_side_panel, c_triggerControlTypeButton, "Tester/TesterRaceButton_Blue");
            DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
            DialogControlSetSize(DialogControlLastCreated(), PlayerGroupAll(), 31, 31);
            DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lv_x * 31), (lv_y * 31));
            libUTES_gv_creator_racebutton[lv_ii][libUTES_gv_factionsTotal] = DialogControlLastCreated();
            DialogControlHookup(DialogControlLastCreated(), c_triggerControlTypeImage, "FaceImage");
            DialogControlSetVisible(DialogControlLastCreated(), PlayerGroupAll(), true);
            lv_image = DialogControlLastCreated();
            libNtve_gf_SetDialogItemImage(lv_image, UserDataGetImagePath("TFaction", lv_faction, "Icon", 1), PlayerGroupAll());
            libNtve_gf_SetDialogItemTooltip(libUTES_gv_creator_racebutton[lv_ii][libUTES_gv_factionsTotal], UserDataGetText("TFaction", lv_faction, "Name", 1), PlayerGroupAll());
            libUTES_gv_factionsTotal += 1;
            lv_x += 1;
            if ((lv_x == 17)) {
                lv_x = 0;
                lv_y += 1;
            }

            lv_builderType = UserDataGetUnit("TFaction", lv_faction, "Builder", 1);
            if ((lv_builderType != null)) {
                if ((lv_ii == 0)) {
                    UnitCreate(1, lv_builderType, 0, 9, Point((20.0 + (lv_z * 1.0)), (17.0 + (libUTES_gv_buildersTotal * 0.9))), 180.0);
                    if ((lv_z == 0)) {
                        lv_z = 1;
                    }
                    else {
                        lv_z = 0;
                    }
                }
                else {
                    UnitCreate(1, lv_builderType, 0, 10, Point((24.0 - (lv_z * 1.0)), (17.0 + (libUTES_gv_buildersTotal * 0.9))), 0.0);
                    if ((lv_z == 0)) {
                        lv_z = 1;
                    }
                    else {
                        lv_z = 0;
                    }
                }
                libUTES_gv_builder_unit[lv_ii][libUTES_gv_buildersTotal] = UnitLastCreated();
                UnitGroupAdd(libUTES_gv_builders, UnitLastCreated());
                libUTES_gv_buildersTotal += 1;
            }

        }
        AISetGroupScriptControlled(libUTES_gv_builders, false);
        lv_x = 0;
        lv_y = 0;
        lv_jj = 0;
        for ( ; ( (auto26D7AF4E_ai >= 0 && lv_jj <= auto26D7AF4E_ae) || (auto26D7AF4E_ai < 0 && lv_jj >= auto26D7AF4E_ae) ) ; lv_jj += auto26D7AF4E_ai ) {
            lv_buttons_panel = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypePanel, ("UIContainer/FullscreenUpperContainer/TesterPanel/CreatorPanel/ItemCard_" + lv_side_str[lv_ii]));
            DialogControlCreateInPanelFromTemplate(lv_buttons_panel, c_triggerControlTypeButton, "Tester/TesterItemButton_Red");
            DialogControlSetPosition(DialogControlLastCreated(), PlayerGroupAll(), c_anchorTopLeft, (lv_x * 76), (lv_y * 76));
            libUTES_gv_creator_itembutton[lv_ii][lv_jj] = DialogControlLastCreated();
            DialogControlHookup(DialogControlLastCreated(), c_triggerControlTypeImage, "FaceImage");
            libUTES_gv_creator_itemface[lv_ii][lv_jj] = DialogControlLastCreated();
            libNtve_gf_SetDialogItemImage(lv_image, UserDataGetImagePath("TFaction", lv_faction, "Icon", 1), PlayerGroupAll());
            lv_x += 1;
            if ((lv_x == 7)) {
                lv_x = 0;
                lv_y += 1;
            }

        }
    }
    libUTES_gv_side_player[0] = (libUTES_gv_const_players+1);
    libUTES_gv_side_player[1] = (libUTES_gv_const_players+2);
    lv_ii = 0;
    for ( ; ( (auto86E42EDB_ai >= 0 && lv_ii <= auto86E42EDB_ae) || (auto86E42EDB_ai < 0 && lv_ii >= auto86E42EDB_ae) ) ; lv_ii += auto86E42EDB_ai ) {
        auto6ABA4F93_ae = (libUTES_gv_buildersTotal - 1);
        lv_jj = 0;
        for ( ; ( (auto6ABA4F93_ai >= 0 && lv_jj <= auto6ABA4F93_ae) || (auto6ABA4F93_ai < 0 && lv_jj >= auto6ABA4F93_ae) ) ; lv_jj += auto6ABA4F93_ai ) {
            UnitSetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 0, lv_ii);
            UnitSetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 1, lv_jj);
            UnitSetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 2, (PointGetX(UnitGetPosition(libUTES_gv_builder_unit[lv_ii][lv_jj]))-PointGetX(libUTES_gv_wORKERSPOINT)));
            UnitSetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 3, (PointGetY(UnitGetPosition(libUTES_gv_builder_unit[lv_ii][lv_jj]))-PointGetY(libUTES_gv_wORKERSPOINT)));
            UnitSetCustomValue(libUTES_gv_builder_unit[lv_ii][lv_jj], 4, UnitGetFacing(libUTES_gv_builder_unit[lv_ii][lv_jj]));
        }
    }
    CreepSetSpeed(c_creepSpeedGrowth, 1000.0);
    CreepSetSpeed(c_creepSpeedDecay, 1000.0);
    CreepSetSpeed(c_creepSpeedBlend, 1000.0);
    libUTES_gf_LoadTerrainData(libUTES_gv_data_terrain[0]);
    libUTES_gf_TesterLeaderboardCreate();
    libUTES_gf_SaveMapStructures();
    autoC05CF7B9_var = 1;
    for ( ; autoC05CF7B9_var <= autoC05CF7B9_ae; autoC05CF7B9_var += 1 ) {
        VisRevealerCreate(autoC05CF7B9_var, RegionEntireMap());
        libUTES_gv_data_player[autoC05CF7B9_var].lv_revealer = VisRevealerLastCreated();
        libUTES_gv_settings_allianceplayerlabel[autoC05CF7B9_var] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeLabel, ("UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListRight/Player" + IntToString(autoC05CF7B9_var) + "/Label"));
        libUTES_gv_settings_alliancebuttons[autoC05CF7B9_var][0] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, ("UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListRight/Player" + IntToString(autoC05CF7B9_var) + "/Red"));
        libUTES_gv_settings_alliancebuttons[autoC05CF7B9_var][1] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, ("UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListRight/Player" + IntToString(autoC05CF7B9_var) + "/Blue"));
        libUTES_gv_settings_alliancebuttons[autoC05CF7B9_var][2] = libUTES_gf_DialogItemFromLayoutHookup(c_triggerControlTypeButton, ("UIContainer/FullscreenUpperContainer/TesterPanel/SettingsPanel/ListRight/Player" + IntToString(autoC05CF7B9_var) + "/Creator"));
    }
    auto272FD0CC_g = UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter((1 << c_targetFilterStructure), 0, 0, 0), 0);
    auto272FD0CC_u = UnitGroupCount(auto272FD0CC_g, c_unitCountAll);
    for (;; auto272FD0CC_u -= 1) {
        auto272FD0CC_var = UnitGroupUnitFromEnd(auto272FD0CC_g, auto272FD0CC_u);
        if (auto272FD0CC_var == null) { break; }
        libNtve_gf_MakeUnitInvulnerable(auto272FD0CC_var, true);
    }
    libNtve_gf_SetAlliance(9, 10, libNtve_ge_AllianceSetting_Neutral);
    auto9E654153_g = PlayerGroupAll();
    auto9E654153_var = -1;
    while (true) {
        auto9E654153_var = PlayerGroupNextPlayer(auto9E654153_g, auto9E654153_var);
        if (auto9E654153_var < 0) { break; }
        PlayerModifyPropertyInt(auto9E654153_var, c_playerPropMinerals, c_playerPropOperSetTo, 1000000000);
        PlayerModifyPropertyInt(auto9E654153_var, c_playerPropVespene, c_playerPropOperSetTo, 1000000000);
        PlayerModifyPropertyInt(auto9E654153_var, c_playerPropTerrazine, c_playerPropOperSetTo, 1000000000);
        PlayerModifyPropertyInt(auto9E654153_var, c_playerPropCustom, c_playerPropOperSetTo, 1000000000);
        PlayerModifyPropertyInt(auto9E654153_var, c_playerPropSuppliesLimit, c_playerPropOperSetTo, 1000);
    }
    if ((PlayerType(2) == c_playerTypeUser)) {
        libUTES_gv_data_player[1].lv_creator_access = true;
        libUTES_gv_data_player[1].lv_player_access[0] = true;
        libUTES_gv_data_player[1].lv_menu_mode = 2;
        libUTES_gv_data_player[2].lv_creator_access = true;
        libUTES_gv_data_player[2].lv_player_access[1] = true;
        libUTES_gv_data_player[2].lv_menu_mode = 2;
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_18ADA5AB"));
        TextExpressionSetToken("Param/Expression/lib_UTES_DBA7EE2D", "A", TextWithColor(PlayerName(1), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(1, false))));
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_UTES_DBA7EE2D"));
        TextExpressionSetToken("Param/Expression/lib_UTES_18E1D0F3", "A", TextWithColor(PlayerName(2), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(2, false))));
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_UTES_18E1D0F3"));
    }
    else {
        libUTES_gv_data_player[1].lv_creator_access = true;
        libUTES_gv_data_player[1].lv_player_access[0] = true;
        libUTES_gv_data_player[1].lv_player_access[1] = true;
        libUTES_gv_data_player[1].lv_menu_mode = 2;
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_C836995F"));
        TextExpressionSetToken("Param/Expression/lib_UTES_8E0A5477", "A", TextWithColor(PlayerName(1), libNtve_gf_ConvertPlayerColorToColor(PlayerGetColorIndex(1, false))));
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_UTES_8E0A5477"));
    }
    HelpPanelAddTip(PlayerGroupActive(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_UTES_658E1BD4"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_UTES_4894E696"), StringExternal("Param/Value/lib_UTES_5467C758"), "Assets\\Textures\\btn-tips-laserdrillantiair.dds");
    HelpPanelAddTip(PlayerGroupActive(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_UTES_038EABAA"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_UTES_DD703A7F"), StringExternal("Param/Value/lib_UTES_DAA77A49"), "Assets\\Textures\\btn-tips-hacking.dds");
    HelpPanelAddTip(PlayerGroupActive(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_UTES_921B3ED5"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_UTES_33DA1E45"), StringExternal("Param/Value/lib_UTES_2DEE567E"), "Assets\\Textures\\btn-tips-starmap.dds");
    HelpPanelAddTip(PlayerGroupActive(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_UTES_101B5689"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_UTES_1C94AC8C"), StringExternal("Param/Value/lib_UTES_07D4D50B"), "Assets\\Textures\\btn-building-terran-bunker.dds");
    HelpPanelAddTip(PlayerGroupActive(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_UTES_E7CF7E3F"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_UTES_69CF76D7"), StringExternal("Param/Value/lib_UTES_5395B634"), "Assets\\Textures\\btn-upgrade-terran-infantryweaponslevel1.dds");
    HelpPanelAddTip(PlayerGroupActive(), libNtve_gf_FormatTipTitle(StringExternal("Param/Value/lib_UTES_4AF5713F"), libNtve_ge_TipType_NormalTip), StringExternal("Param/Value/lib_UTES_5C38B5CF"), StringExternal("Param/Value/lib_UTES_73A4267C"), "Assets\\Textures\\btn-unit-terran-marine.dds");
    TimerStart(libUTES_gv_test_timer, c_timerDurationInfinite, false, c_timeReal);
    libUTES_gf_RenderTesterUIForAllPlayers();
    TriggerSendEvent(libUTES_gv_uNITTESTERINITIALIZED);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_InitializeUnitTesterInterface_Init () {
    libUTES_gt_InitializeUnitTesterInterface = TriggerCreate("libUTES_gt_InitializeUnitTesterInterface_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ctrl Off
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_CtrlOff_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_data_player[EventPlayer()].lv_ctrl = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_CtrlOff_Init () {
    libUTES_gt_CtrlOff = TriggerCreate("libUTES_gt_CtrlOff_Func");
    TriggerAddEventKeyPressed(libUTES_gt_CtrlOff, c_playerAny, c_keyControl, false, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Ctrl On
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_CtrlOn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_data_player[EventPlayer()].lv_ctrl = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_CtrlOn_Init () {
    libUTES_gt_CtrlOn = TriggerCreate("libUTES_gt_CtrlOn_Func");
    TriggerAddEventKeyPressed(libUTES_gt_CtrlOn, c_playerAny, c_keyControl, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Shift Off
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_ShiftOff_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_data_player[EventPlayer()].lv_shift = false;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_ShiftOff_Init () {
    libUTES_gt_ShiftOff = TriggerCreate("libUTES_gt_ShiftOff_Func");
    TriggerAddEventKeyPressed(libUTES_gt_ShiftOff, c_playerAny, c_keyShift, false, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Shift On
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_ShiftOn_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_data_player[EventPlayer()].lv_shift = true;
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_ShiftOn_Init () {
    libUTES_gt_ShiftOn = TriggerCreate("libUTES_gt_ShiftOn_Func");
    TriggerAddEventKeyPressed(libUTES_gt_ShiftOn, c_playerAny, c_keyShift, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Dialog Item Is Used
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_DialogItemIsUsed_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_ii;
    int lv_jj;
    int lv_level_ii;
    string lv_unit;
    string lv_commander;

    // Automatic Variable Declarations
    const int auto1CD61EB5_ae = libUTES_gv_const_races;
    const int auto1CD61EB5_ai = 1;
    const int auto84A33010_ae = libUTES_gv_const_card_length;
    const int auto84A33010_ai = 1;
    const int autoD419ADBC_ae = libUTES_gv_const_races;
    const int autoD419ADBC_ai = 1;
    const int autoF5F86A13_ae = libUTES_gv_const_card_length;
    const int autoF5F86A13_ai = 1;
    const int auto932EB940_ae = libUTES_gv_const_races;
    const int auto932EB940_ai = 1;
    const int auto57DACBCB_ae = libUTES_gv_const_card_length;
    const int auto57DACBCB_ai = 1;
    const int autoE3BF126B_ae = libUTES_gv_const_races;
    const int autoE3BF126B_ai = 1;
    const int autoB4BBC86F_ae = libUTES_gv_const_card_length;
    const int autoB4BBC86F_ai = 1;
    const int auto16C955D9_ae = libUTES_gv_const_races;
    const int auto16C955D9_ai = 1;
    const int auto235DE095_ae = libUTES_gv_const_card_length;
    const int auto235DE095_ai = 1;
    const int autoDC74CF61_ae = libUTES_gv_const_races;
    const int autoDC74CF61_ai = 1;
    const int autoAFC7EFC6_ae = libUTES_gv_const_card_length;
    const int autoAFC7EFC6_ai = 1;
    const int auto2596D842_ae = 8;
    int auto2596D842_var;
    const int autoEA4A2D73_ae = 8;
    int autoEA4A2D73_var;
    const int autoE661890C_ae = libUTES_gv_const_terrains;
    const int autoE661890C_ai = 1;
    const int autoD989ED94_ae = libUTES_gv_const_players;
    const int autoD989ED94_ai = 1;
    const int auto648AF7CE_ae = 1;
    int auto648AF7CE_var;
    const int autoC2D19EA5_ae = libUTES_gv_const_card_length;
    const int autoC2D19EA5_ai = 1;
    const int auto4382E30E_ae = libUTES_gv_tMAXFACTIONS;
    int auto4382E30E_var;
    const int auto69F0821A_ae = 1;
    const int auto69F0821A_ai = 1;

    // Variable Initialization

    // Actions
    if (!runActions) {
        return true;
    }

    if ((EventDialogControl() == libUTES_gv_menu_mode_settings)) {
        if ((libUTES_gv_data_player[EventPlayer()].lv_menu_mode == 1)) {
            libUTES_gv_data_player[EventPlayer()].lv_menu_mode = 0;
        }
        else {
            libUTES_gv_data_player[EventPlayer()].lv_menu_mode = 1;
        }
        libUTES_gf_RenderTesterUIForPlayer(EventPlayer());
        return true;
    }

    if ((EventDialogControl() == libUTES_gv_menu_mode_creator)) {
        if ((libUTES_gv_data_player[EventPlayer()].lv_menu_mode == 2)) {
            libUTES_gv_data_player[EventPlayer()].lv_menu_mode = 0;
        }
        else {
            libUTES_gv_data_player[EventPlayer()].lv_menu_mode = 2;
        }
        libUTES_gf_RenderTesterUIForPlayer(EventPlayer());
        return true;
    }

    if ((libUTES_gv_attack_mode == false)) {
        if ((EventDialogControl() == libUTES_gv_menu_creator_mirror)) {
            libUTES_gf_MirrorTesterUnitsByPlayer(EventPlayer());
            return true;
        }

        if ((EventDialogControl() == libUTES_gv_menu_creator_clear)) {
            TriggerExecute(libUTES_gt_TesterClearUnits, true, false);
            return true;
        }

        if ((EventDialogControl() == libUTES_gv_menu_start_attack)) {
            TriggerExecute(libUTES_gt_TesterStartButton, true, false);
            libUTES_gf_RenderTesterUIForAllPlayers();
            return true;
        }

        if ((libUTES_gv_data_player[EventPlayer()].lv_menu_mode == 1)) {
            if ((EventDialogControl() == libUTES_gv_settings_upgradebutton[0])) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_601FD090"));
                lv_ii = 0;
                for ( ; ( (auto1CD61EB5_ai >= 0 && lv_ii <= auto1CD61EB5_ae) || (auto1CD61EB5_ai < 0 && lv_ii >= auto1CD61EB5_ae) ) ; lv_ii += auto1CD61EB5_ai ) {
                    lv_jj = 0;
                    for ( ; ( (auto84A33010_ai >= 0 && lv_jj <= auto84A33010_ae) || (auto84A33010_ai < 0 && lv_jj >= auto84A33010_ae) ) ; lv_jj += auto84A33010_ai ) {
                        if ((libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_levels > 0) && (libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0] != null)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 0);
                        }

                    }
                }
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            else if ((EventDialogControl() == libUTES_gv_settings_upgradebutton[1])) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_F044DF2B"));
                lv_ii = 0;
                for ( ; ( (autoD419ADBC_ai >= 0 && lv_ii <= autoD419ADBC_ae) || (autoD419ADBC_ai < 0 && lv_ii >= autoD419ADBC_ae) ) ; lv_ii += autoD419ADBC_ai ) {
                    lv_jj = 0;
                    for ( ; ( (autoF5F86A13_ai >= 0 && lv_jj <= autoF5F86A13_ae) || (autoF5F86A13_ai < 0 && lv_jj >= autoF5F86A13_ae) ) ; lv_jj += autoF5F86A13_ai ) {
                        if ((libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_levels > 0) && (libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0] != null)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 0);
                        }

                    }
                }
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            else if ((EventDialogControl() == libUTES_gv_settings_upgradebutton[2])) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_689F4412"));
                lv_ii = 0;
                for ( ; ( (auto932EB940_ai >= 0 && lv_ii <= auto932EB940_ae) || (auto932EB940_ai < 0 && lv_ii >= auto932EB940_ae) ) ; lv_ii += auto932EB940_ai ) {
                    lv_jj = 0;
                    for ( ; ( (auto57DACBCB_ai >= 0 && lv_jj <= auto57DACBCB_ae) || (auto57DACBCB_ai < 0 && lv_jj >= auto57DACBCB_ae) ) ; lv_jj += auto57DACBCB_ai ) {
                        if ((libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_levels > 0) && (libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0] != null)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 0);
                        }

                    }
                }
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            else if ((EventDialogControl() == libUTES_gv_settings_upgradebutton[3])) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_ABE77259"));
                lv_ii = 0;
                for ( ; ( (autoE3BF126B_ai >= 0 && lv_ii <= autoE3BF126B_ae) || (autoE3BF126B_ai < 0 && lv_ii >= autoE3BF126B_ae) ) ; lv_ii += autoE3BF126B_ai ) {
                    lv_jj = 0;
                    for ( ; ( (autoB4BBC86F_ai >= 0 && lv_jj <= autoB4BBC86F_ae) || (autoB4BBC86F_ai < 0 && lv_jj >= autoB4BBC86F_ae) ) ; lv_jj += autoB4BBC86F_ai ) {
                        if ((libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_levels > 0) && (libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0] != null)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[1], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[2], 1);
                        }

                    }
                }
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            else if ((EventDialogControl() == libUTES_gv_settings_researchbutton[0])) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_035C840F"));
                lv_ii = 0;
                for ( ; ( (auto16C955D9_ai >= 0 && lv_ii <= auto16C955D9_ae) || (auto16C955D9_ai < 0 && lv_ii >= auto16C955D9_ae) ) ; lv_ii += auto16C955D9_ai ) {
                    lv_jj = 0;
                    for ( ; ( (auto235DE095_ai >= 0 && lv_jj <= auto235DE095_ae) || (auto235DE095_ai < 0 && lv_jj >= auto235DE095_ae) ) ; lv_jj += auto235DE095_ai ) {
                        if ((libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_levels == 0) && (libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0] != null)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 0);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 0);
                        }

                    }
                }
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            else if ((EventDialogControl() == libUTES_gv_settings_researchbutton[1])) {
                UIDisplayMessage(PlayerGroupAll(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_1468DB84"));
                lv_ii = 0;
                for ( ; ( (autoDC74CF61_ai >= 0 && lv_ii <= autoDC74CF61_ae) || (autoDC74CF61_ai < 0 && lv_ii >= autoDC74CF61_ae) ) ; lv_ii += autoDC74CF61_ai ) {
                    lv_jj = 0;
                    for ( ; ( (autoAFC7EFC6_ai >= 0 && lv_jj <= autoAFC7EFC6_ae) || (autoAFC7EFC6_ai < 0 && lv_jj >= autoAFC7EFC6_ae) ) ; lv_jj += autoAFC7EFC6_ai ) {
                        if ((libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_levels == 0) && (libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0] != null)) {
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[0], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                            libNtve_gf_SetUpgradeLevelForPlayer(libUTES_gv_side_player[1], libUTES_gv_data_upgrade[lv_ii][lv_jj].lv_upgrade[0], 1);
                        }

                    }
                }
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            else if ((EventDialogControl() == libUTES_gv_settings_visionbutton[0])) {
                auto2596D842_var = 1;
                for ( ; auto2596D842_var <= auto2596D842_ae; auto2596D842_var += 1 ) {
                    VisRevealerEnable(libUTES_gv_data_player[auto2596D842_var].lv_revealer, false);
                }
                libUTES_gv_vision = false;
                UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_FFD4A8DD"));
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            else if ((EventDialogControl() == libUTES_gv_settings_visionbutton[1])) {
                autoEA4A2D73_var = 1;
                for ( ; autoEA4A2D73_var <= autoEA4A2D73_ae; autoEA4A2D73_var += 1 ) {
                    VisRevealerEnable(libUTES_gv_data_player[autoEA4A2D73_var].lv_revealer, true);
                }
                libUTES_gv_vision = true;
                UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_5173F782"));
                libUTES_gf_RenderTesterUIForAllPlayers();
                return true;
            }
            lv_ii = 0;
            for ( ; ( (autoE661890C_ai >= 0 && lv_ii <= autoE661890C_ae) || (autoE661890C_ai < 0 && lv_ii >= autoE661890C_ae) ) ; lv_ii += autoE661890C_ai ) {
                if ((EventDialogControl() == libUTES_gv_settings_terrainbutton[lv_ii])) {
                    libUTES_gv_terrain_index = lv_ii;
                    libUTES_gf_LoadTerrainData(libUTES_gv_data_terrain[lv_ii]);
                    libUTES_gf_RenderTesterUIForAllPlayers();
                    return true;
                }

            }
            lv_ii = 0;
            for ( ; ( (autoD989ED94_ai >= 0 && lv_ii <= autoD989ED94_ae) || (autoD989ED94_ai < 0 && lv_ii >= autoD989ED94_ae) ) ; lv_ii += autoD989ED94_ai ) {
                if ((EventDialogControl() == libUTES_gv_settings_alliancebuttons[lv_ii][0])) {
                    libUTES_gv_data_player[lv_ii].lv_player_access[0] = !(libUTES_gv_data_player[lv_ii].lv_player_access[0]);
                    libUTES_gf_RenderTesterUIForPlayer(EventPlayer());
                    return true;
                }

                if ((EventDialogControl() == libUTES_gv_settings_alliancebuttons[lv_ii][1])) {
                    libUTES_gv_data_player[lv_ii].lv_player_access[1] = !(libUTES_gv_data_player[lv_ii].lv_player_access[1]);
                    libUTES_gf_RenderTesterUIForPlayer(EventPlayer());
                    return true;
                }

                if ((EventDialogControl() == libUTES_gv_settings_alliancebuttons[lv_ii][2])) {
                    libUTES_gv_data_player[lv_ii].lv_creator_access = !(libUTES_gv_data_player[lv_ii].lv_creator_access);
                    libUTES_gf_RenderTesterUIForPlayer(EventPlayer());
                    return true;
                }

            }
        }

        if ((libUTES_gv_data_player[EventPlayer()].lv_menu_mode == 2)) {
            auto648AF7CE_var = 0;
            for ( ; auto648AF7CE_var <= auto648AF7CE_ae; auto648AF7CE_var += 1 ) {
                lv_ii = 0;
                for ( ; ( (autoC2D19EA5_ai >= 0 && lv_ii <= autoC2D19EA5_ae) || (autoC2D19EA5_ai < 0 && lv_ii >= autoC2D19EA5_ae) ) ; lv_ii += autoC2D19EA5_ai ) {
                    if ((EventDialogControl() == libUTES_gv_creator_itembutton[auto648AF7CE_var][lv_ii])) {
                        libUTES_gv_data_player[EventPlayer()].lv_creator_side = auto648AF7CE_var;
                        if ((libUTES_gv_data_player[EventPlayer()].lv_creator_tech[auto648AF7CE_var] == 0)) {
                            UnitClearSelection(EventPlayer());
                            lv_commander = UserDataInstance("TFaction", (libUTES_gv_data_player[EventPlayer()].lv_creator_race[auto648AF7CE_var] + 1));
                            lv_unit = UserDataGetUnit("TFaction", lv_commander, "Unit", (lv_ii + 1));
                            libUTES_gf_CreatorAddUnits(EventPlayer(), auto648AF7CE_var, lv_unit);
                            UnitGroupSelect(UnitLastCreatedGroup(), EventPlayer(), true);
                        }
                        else {
                            libUTES_gf_CreatorAddUpgrade(auto648AF7CE_var, libUTES_gv_data_upgrade[libUTES_gv_data_player[EventPlayer()].lv_creator_race[auto648AF7CE_var]][lv_ii]);
                            libUTES_gf_RenderTesterUIForAllPlayers();
                        }
                        return true;
                    }

                }
            }
            auto4382E30E_var = 0;
            for ( ; auto4382E30E_var <= auto4382E30E_ae; auto4382E30E_var += 1 ) {
                lv_ii = 0;
                for ( ; ( (auto69F0821A_ai >= 0 && lv_ii <= auto69F0821A_ae) || (auto69F0821A_ai < 0 && lv_ii >= auto69F0821A_ae) ) ; lv_ii += auto69F0821A_ai ) {
                    if ((EventDialogControl() == libUTES_gv_creator_racebutton[lv_ii][auto4382E30E_var])) {
                        if ((libUTES_gv_data_player[EventPlayer()].lv_creator_race[lv_ii] == auto4382E30E_var)) {
                            if ((libUTES_gv_data_player[EventPlayer()].lv_creator_tech[lv_ii] == 0)) {
                                libUTES_gv_data_player[EventPlayer()].lv_creator_tech[lv_ii] = 1;
                            }
                            else {
                                libUTES_gv_data_player[EventPlayer()].lv_creator_tech[lv_ii] = 0;
                            }
                        }
                        else {
                            libUTES_gv_data_player[EventPlayer()].lv_creator_tech[lv_ii] = 0;
                        }
                        libUTES_gv_data_player[EventPlayer()].lv_creator_race[lv_ii] = auto4382E30E_var;
                        libUTES_gf_RenderTesterUIForPlayer(EventPlayer());
                        return true;
                    }

                }
            }
        }

    }

    if ((libUTES_gv_attack_mode == true)) {
        if ((EventDialogControl() == libUTES_gv_menu_attack_reset)) {
            TriggerExecute(libUTES_gt_TesterResetUnits, true, false);
            return true;
        }

        if ((EventDialogControl() == libUTES_gv_menu_attack_pause)) {
            TriggerExecute(libUTES_gt_TesterPauseUnits, true, false);
            return true;
        }

        if ((EventDialogControl() == libUTES_gv_menu_stop_attack)) {
            TriggerExecute(libUTES_gt_TesterStopButton, true, false);
            libUTES_gf_RenderTesterUIForAllPlayers();
            return true;
        }

        if ((EventDialogControl() == libUTES_gv_menu_attack_attack)) {
            TriggerExecute(libUTES_gt_TesterAttackButton, true, false);
            return true;
        }

    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_DialogItemIsUsed_Init () {
    libUTES_gt_DialogItemIsUsed = TriggerCreate("libUTES_gt_DialogItemIsUsed_Func");
    TriggerAddEventDialogControl(libUTES_gt_DialogItemIsUsed, c_playerAny, c_invalidDialogControlId, c_triggerControlEventTypeClick);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Clear Units
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterClearUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Actions
    if (!runActions) {
        return true;
    }

    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_811083A4"));
    libUTES_gf_DeleteAllTesterUnits();
    libUTES_gf_TesterLeaderboardCreate();
    Wait(1.0, c_timeGame);
    libUTES_gf_RestoreMapStructures();
    UIClearMessages(PlayerGroupActive(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterClearUnits_Init () {
    libUTES_gt_TesterClearUnits = TriggerCreate("libUTES_gt_TesterClearUnits_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Delete Units
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterDeleteUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    unitgroup auto6608B2CF_g;
    int auto6608B2CF_u;
    unit auto6608B2CF_var;

    // Conditions
    if (testConds) {
        if (!((libUTES_gv_attack_mode == false))) {
            return false;
        }

        if (!((libUTES_gv_data_player[EventPlayer()].lv_creator_access == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    SoundPlay(SoundLink("UI_NavButtonSelect", -1), PlayerGroupActive(), 100.0, 0.0);
    auto6608B2CF_g = UnitGroupSelected(EventPlayer());
    auto6608B2CF_u = UnitGroupCount(auto6608B2CF_g, c_unitCountAll);
    for (;; auto6608B2CF_u -= 1) {
        auto6608B2CF_var = UnitGroupUnitFromEnd(auto6608B2CF_g, auto6608B2CF_u);
        if (auto6608B2CF_var == null) { break; }
        if ((libNtve_gf_UnitIsInvulnerable(auto6608B2CF_var) == false)) {
            UnitKill(auto6608B2CF_var);
            if ((UnitGetOwner(auto6608B2CF_var) == libUTES_gv_side_player[0])) {
                libUTES_gv_data_player[EventPlayer()].lv_creator_side = 0;
            }
            else if ((UnitGetOwner(auto6608B2CF_var) == libUTES_gv_side_player[1])) {
                libUTES_gv_data_player[EventPlayer()].lv_creator_side = 1;
            }
        }

    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterDeleteUnits_Init () {
    libUTES_gt_TesterDeleteUnits = TriggerCreate("libUTES_gt_TesterDeleteUnits_Func");
    TriggerAddEventKeyPressed(libUTES_gt_TesterDeleteUnits, c_playerAny, c_keyBackSpace, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Pause Units
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterPauseUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libUTES_gv_attack_mode == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libUTES_gv_pause == false)) {
        TimerPause(libUTES_gv_test_timer, true);
        UnitPauseAll(true);
        libUTES_gv_pause = true;
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaDirective, StringExternal("Param/Value/lib_UTES_FE1D6778"));
        TriggerStop(libUTES_gt_TesterPauseUnits);
    }
    else {
        TimerPause(libUTES_gv_test_timer, false);
        UnitPauseAll(false);
        libUTES_gv_pause = false;
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaDirective, StringExternal("Param/Value/lib_UTES_47EB8B3F"));
        Wait(2.0, c_timeReal);
        UIClearMessages(PlayerGroupActive(), c_messageAreaDirective);
    }
    libUTES_gf_RenderTesterUIForAllPlayers();
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterPauseUnits_Init () {
    libUTES_gt_TesterPauseUnits = TriggerCreate("libUTES_gt_TesterPauseUnits_Func");
    TriggerAddEventKeyPressed(libUTES_gt_TesterPauseUnits, c_playerAny, c_keyMinus, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libUTES_gt_TesterPauseUnits, c_playerAny, c_keyNumPadMinus, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Reset Units
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterResetUnits_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libUTES_gv_attack_mode == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_pause = false;
    UIClearMessages(PlayerGroupActive(), c_messageAreaDirective);
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_D71D1374"));
    libUTES_gf_ResetTesterUnits();
    if ((libUTES_gf_NoUnitsForSide(0) == false) && (libUTES_gf_NoUnitsForSide(1) == false)) {
        TriggerEnable(libUTES_gt_TesterResult, true);
    }

    libUTES_gf_RenderTesterUIForAllPlayers();
    Wait(1.0, c_timeGame);
    UIClearMessages(PlayerGroupActive(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterResetUnits_Init () {
    libUTES_gt_TesterResetUnits = TriggerCreate("libUTES_gt_TesterResetUnits_Func");
    TriggerAddEventKeyPressed(libUTES_gt_TesterResetUnits, c_playerAny, c_keyEquals, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
    TriggerAddEventKeyPressed(libUTES_gt_TesterResetUnits, c_playerAny, c_keyNumPadPlus, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Start Button
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterStartButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup autoED67B265_g;
    int autoED67B265_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_attack_mode = true;
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_7CF58325"));
    CreepSetSpeed(c_creepSpeedGrowth, 100.0);
    CreepSetSpeed(c_creepSpeedDecay, 100.0);
    CreepSetSpeed(c_creepSpeedBlend, 100.0);
    libUTES_gf_SaveTesterUnits();
    TriggerEnable(libUTES_gt_LeaderboardUnitCreated, false);
    TriggerEnable(libUTES_gt_LeaderboardUnitRemoved, false);
    BoardMinimizeSetState(libUTES_gv_leaderboard, PlayerGroupActive(), true);
    libNtve_gf_SetAlliance(9, 10, libNtve_ge_AllianceSetting_Enemy);
    autoED67B265_g = PlayerGroupActive();
    autoED67B265_var = -1;
    while (true) {
        autoED67B265_var = PlayerGroupNextPlayer(autoED67B265_g, autoED67B265_var);
        if (autoED67B265_var < 0) { break; }
        UnitGroupSelect(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0), autoED67B265_var, false);
    }
    libUTES_gf_ResetTesterUnits();
    TimerRestart(libUTES_gv_test_timer);
    TimerWindowCreate(libUTES_gv_test_timer, StringExternal("UI/VictoryMissionTime_Colon"), true, true);
    libUTES_gv_test_timer_window = TimerWindowLastCreated();
    if ((libUTES_gf_NoUnitsForSide(0) == false) && (libUTES_gf_NoUnitsForSide(1) == false)) {
        TriggerEnable(libUTES_gt_TesterResult, true);
    }

    Wait(1.0, c_timeGame);
    UIClearMessages(PlayerGroupActive(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterStartButton_Init () {
    libUTES_gt_TesterStartButton = TriggerCreate("libUTES_gt_TesterStartButton_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Stop Button
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterStopButton_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    playergroup auto89291528_g;
    int auto89291528_var;

    // Actions
    if (!runActions) {
        return true;
    }

    libUTES_gv_attack_mode = false;
    libUTES_gv_pause = false;
    UIClearMessages(PlayerGroupActive(), c_messageAreaDirective);
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_9297BD25"));
    CreepSetSpeed(c_creepSpeedGrowth, 1000.0);
    CreepSetSpeed(c_creepSpeedDecay, 1000.0);
    CreepSetSpeed(c_creepSpeedBlend, 1000.0);
    TimerWindowDestroy(libUTES_gv_test_timer_window);
    libUTES_gf_ResetTesterUnits();
    libNtve_gf_SetAlliance(9, 10, libNtve_ge_AllianceSetting_Neutral);
    auto89291528_g = PlayerGroupActive();
    auto89291528_var = -1;
    while (true) {
        auto89291528_var = PlayerGroupNextPlayer(auto89291528_g, auto89291528_var);
        if (auto89291528_var < 0) { break; }
        UnitGroupSelect(UnitGroup(null, c_playerAny, RegionEntireMap(), UnitFilter(0, 0, 0, 0), 0), auto89291528_var, false);
    }
    libUTES_gf_MovePlayerCameras();
    BoardMinimizeSetState(libUTES_gv_leaderboard, PlayerGroupActive(), false);
    TriggerEnable(libUTES_gt_TesterResult, false);
    Wait(0.0625, c_timeGame);
    TriggerEnable(libUTES_gt_LeaderboardUnitCreated, true);
    TriggerEnable(libUTES_gt_LeaderboardUnitRemoved, true);
    Wait(1.0, c_timeGame);
    UIClearMessages(PlayerGroupActive(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterStopButton_Init () {
    libUTES_gt_TesterStopButton = TriggerCreate("libUTES_gt_TesterStopButton_Func");
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Attack Button
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterAttackButton_Func (bool testConds, bool runActions) {
    // Variable Declarations
    unitgroup lv_units;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_units = UnitGroupEmpty();

    // Conditions
    if (testConds) {
        if (!((libUTES_gv_attack_mode == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    if ((libUTES_gv_data_player[EventPlayer()].lv_ctrl == false) && (libUTES_gv_data_player[EventPlayer()].lv_shift == true)) {
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_D371E110"));
        PlayerSetDifficulty(9, 7);
        AISetAPM(9, 900);
        AIMeleeStart(9);
    }
    else if ((libUTES_gv_data_player[EventPlayer()].lv_ctrl == true) && (libUTES_gv_data_player[EventPlayer()].lv_shift == false)) {
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_A061D0E7"));
        PlayerSetDifficulty(10, 7);
        AISetAPM(10, 900);
        AIMeleeStart(10);
    }
    else if (true) {
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_C1E9B1B4"));
        PlayerSetDifficulty(9, 7);
        AISetAPM(9, 900);
        AIMeleeStart(9);
        PlayerSetDifficulty(10, 7);
        AISetAPM(10, 900);
        AIMeleeStart(10);
    }
    Wait(1.0, c_timeGame);
    UIClearMessages(PlayerGroupActive(), c_messageAreaSubtitle);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterAttackButton_Init () {
    libUTES_gt_TesterAttackButton = TriggerCreate("libUTES_gt_TesterAttackButton_Func");
    TriggerAddEventKeyPressed(libUTES_gt_TesterAttackButton, c_playerAny, c_keyPeriod, true, c_keyModifierStateIgnore, c_keyModifierStateIgnore, c_keyModifierStateIgnore);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Tester Result
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_TesterResult_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int[2] lv_unit_count;
    int lv_mineral_count;
    int lv_gas_count;
    int lv_food_count;
    int lv_winning_player;
    text lv_winning_text;
    int lv_winning_count;

    // Automatic Variable Declarations
    unitgroup auto60D5A5E7_g;
    int auto60D5A5E7_u;
    unit auto60D5A5E7_var;

    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!(((libUTES_gf_NoUnitsForSide(0) == true) || (libUTES_gf_NoUnitsForSide(1) == true)))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    TriggerEnable(libUTES_gt_TesterResult, false);
    Wait(1.0, c_timeGame);
    lv_unit_count[0] = UnitGroupCount(UnitGroup(null, 9, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), c_unitCountAlive);
    lv_unit_count[1] = UnitGroupCount(UnitGroup(null, 10, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), c_unitCountAlive);
    if ((lv_unit_count[0] == 0) && (lv_unit_count[1] == 0)) {
        UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, StringExternal("Param/Value/lib_UTES_D29299D2"));
        return true;
    }
    else if ((lv_unit_count[0] == 0)) {
        lv_winning_count = lv_unit_count[1];
        lv_winning_player = libUTES_gv_side_player[1];
        lv_winning_text = StringExternal("Param/Value/lib_UTES_2D70F97A");
    }
    else if ((lv_unit_count[1] == 0)) {
        lv_winning_count = lv_unit_count[0];
        lv_winning_player = libUTES_gv_side_player[0];
        lv_winning_text = StringExternal("Param/Value/lib_UTES_7A6C95DA");
    }
    auto60D5A5E7_g = UnitGroup(null, lv_winning_player, RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0);
    auto60D5A5E7_u = UnitGroupCount(auto60D5A5E7_g, c_unitCountAll);
    for (;; auto60D5A5E7_u -= 1) {
        auto60D5A5E7_var = UnitGroupUnitFromEnd(auto60D5A5E7_g, auto60D5A5E7_u);
        if (auto60D5A5E7_var == null) { break; }
        lv_mineral_count += UnitTypeGetCost(UnitGetType(auto60D5A5E7_var), c_unitCostMinerals);
        lv_gas_count += UnitTypeGetCost(UnitGetType(auto60D5A5E7_var), c_unitCostVespene);
    }
    lv_food_count = PlayerGetPropertyInt(lv_winning_player, c_playerPropSuppliesUsed);
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "A", lv_winning_text);
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "B", IntToText(lv_winning_count));
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "C", StringExternal("UI/Icon22_Minerals_Terr"));
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "D", IntToText(lv_mineral_count));
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "E", StringExternal("UI/Icon22_Vespene_Terr"));
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "F", IntToText(lv_gas_count));
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "G", StringExternal("UI/Icon22_Supply_Terr"));
    TextExpressionSetToken("Param/Expression/lib_UTES_25AF8D9F", "H", IntToText(lv_food_count));
    UIDisplayMessage(PlayerGroupActive(), c_messageAreaSubtitle, TextExpressionAssemble("Param/Expression/lib_UTES_25AF8D9F"));
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_TesterResult_Init () {
    libUTES_gt_TesterResult = TriggerCreate("libUTES_gt_TesterResult_Func");
    TriggerEnable(libUTES_gt_TesterResult, false);
    TriggerAddEventTimePeriodic(libUTES_gt_TesterResult, 1.0, c_timeGame);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Instant Build
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_InstantBuild_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libUTES_gv_attack_mode == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetProgressComplete(EventUnitProgressUnit(), 1, 99);
    UnitSetProgressComplete(EventUnit(), 1, 99);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_InstantBuild_Init () {
    libUTES_gt_InstantBuild = TriggerCreate("libUTES_gt_InstantBuild_Func");
    TriggerEnable(libUTES_gt_InstantBuild, false);
    TriggerAddEventUnitArmMagazineProgress(libUTES_gt_InstantBuild, null, c_unitProgressStageStart);
    TriggerAddEventUnitConstructProgress(libUTES_gt_InstantBuild, null, c_unitProgressStageStart);
    TriggerAddEventUnitResearchProgress(libUTES_gt_InstantBuild, null, c_unitProgressStageStart);
    TriggerAddEventUnitTrainProgress(libUTES_gt_InstantBuild, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Disable Structures
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_DisableStructures_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!((libUTES_gv_attack_mode == false))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    libNtve_gf_MakeUnitUncommandable(EventUnitProgressUnit(), true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_DisableStructures_Init () {
    libUTES_gt_DisableStructures = TriggerCreate("libUTES_gt_DisableStructures_Func");
    TriggerAddEventUnitConstructProgress(libUTES_gt_DisableStructures, null, c_unitProgressStageStart);
    TriggerAddEventUnitTrainProgress(libUTES_gt_DisableStructures, null, c_unitProgressStageStart);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Player Deselects Any Builder
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_PlayerDeselectsAnyBuilder_Func (bool testConds, bool runActions) {
    // Variable Declarations
    int lv_ii;
    int lv_jj;

    // Automatic Variable Declarations
    // Variable Initialization

    // Conditions
    if (testConds) {
        if (!((UnitGroupHasUnit(libUTES_gv_builders, EventUnit()) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    while (!((UnitOrderCount(EventUnit()) == 0))) {
        Wait(1.0, c_timeGame);
    }
    UnitIssueOrder(EventUnit(), OrderTargetingPoint(AbilityCommand("move", 0), PointWithOffset(libUTES_gv_terrain.lv_spawnPoints[2], UnitGetCustomValue(EventUnit(), 2), UnitGetCustomValue(EventUnit(), 3))), c_orderQueueReplace);
    UnitWaitUntilIdle(EventUnit(), true);
    libNtve_gf_MakeUnitUncommandable(EventUnit(), false);
    UnitSetFacing(EventUnit(), UnitGetCustomValue(EventUnit(), 4), 1.0);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_PlayerDeselectsAnyBuilder_Init () {
    libUTES_gt_PlayerDeselectsAnyBuilder = TriggerCreate("libUTES_gt_PlayerDeselectsAnyBuilder_Func");
    TriggerAddEventUnitSelected(libUTES_gt_PlayerDeselectsAnyBuilder, null, c_playerAny, false);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Create Neutral Structure
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_CreateNeutralStructure_Func (bool testConds, bool runActions) {
    // Automatic Variable Declarations
    // Conditions
    if (testConds) {
        if (!(((UnitGetType(EventUnitCreatedUnit()) == "XelNagaTower") || (UnitGetType(EventUnitCreatedUnit()) == "DestructibleRock4x4") || (UnitGetType(EventUnitCreatedUnit()) == "SupplyDepotLowered") || (UnitGetType(EventUnitCreatedUnit()) == "MineralField") || (UnitGetType(EventUnitCreatedUnit()) == "VespeneGeyser")))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    UnitSetOwner(EventUnitCreatedUnit(), 0, true);
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_CreateNeutralStructure_Init () {
    libUTES_gt_CreateNeutralStructure = TriggerCreate("libUTES_gt_CreateNeutralStructure_Func");
    TriggerAddEventUnitCreated(libUTES_gt_CreateNeutralStructure, null, "CustomBuild", null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Leaderboard Unit Created
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_LeaderboardUnitCreated_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unit_type;
    string lv_unit_name;
    int lv_col;
    int lv_row;
    int lv_unit_count;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unit_type = UnitGetType(EventUnitCreatedUnit());

    // Conditions
    if (testConds) {
        if (!((libUTES_gf_TesterLeaderboardValidUnitType(lv_unit_type) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_unit_name = (lv_unit_type);
    lv_unit_count = UnitGroupCount(UnitGroup(lv_unit_type, UnitGetOwner(EventUnitCreatedUnit()), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), c_unitCountAlive);
    lv_col = (UnitGetOwner(EventUnitCreatedUnit()) - libUTES_gv_const_players);
    if ((DataTableValueExists(true, lv_unit_name) == false)) {
        lv_row = libUTES_gf_TesterLeaderboardAddRow(lv_unit_name);
    }
    else {
        lv_row = DataTableGetInt(true, lv_unit_name);
    }
    libUTES_gv_leaderboard_minerals[lv_col] += UnitTypeGetCost(lv_unit_type, c_unitCostMinerals);
    libUTES_gv_leaderboard_gas[lv_col] += UnitTypeGetCost(lv_unit_type, c_unitCostVespene);
    libUTES_gf_TesterLeaderboardSpecialUnitCost(lv_unit_type, lv_col, false);
    BoardItemSetText(libUTES_gv_leaderboard, lv_col, 1, IntToText(libUTES_gv_leaderboard_minerals[lv_col]));
    BoardItemSetText(libUTES_gv_leaderboard, lv_col, 2, IntToText(libUTES_gv_leaderboard_gas[lv_col]));
    BoardItemSetText(libUTES_gv_leaderboard, lv_col, 3, IntToText(PlayerGetPropertyInt(UnitGetOwner(EventUnitCreatedUnit()), c_playerPropSuppliesUsed)));
    BoardItemSetText(libUTES_gv_leaderboard, lv_col, lv_row, IntToText(lv_unit_count));
    if ((libUTES_gv_leaderboard_icon_flag[lv_col][lv_row] == false)) {
        libUTES_gf_TesterLeaderboardAddIcon(lv_unit_type, lv_col, lv_row);
    }

    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_LeaderboardUnitCreated_Init () {
    libUTES_gt_LeaderboardUnitCreated = TriggerCreate("libUTES_gt_LeaderboardUnitCreated_Func");
    TriggerAddEventUnitCreated(libUTES_gt_LeaderboardUnitCreated, null, null, null);
}

//--------------------------------------------------------------------------------------------------
// Trigger: Leaderboard Unit Removed
//--------------------------------------------------------------------------------------------------
bool libUTES_gt_LeaderboardUnitRemoved_Func (bool testConds, bool runActions) {
    // Variable Declarations
    string lv_unit_type;
    string lv_unit_name;
    int lv_col;
    int lv_row;
    int lv_unitcount;

    // Automatic Variable Declarations
    // Variable Initialization
    lv_unit_type = UnitGetType(EventUnit());

    // Conditions
    if (testConds) {
        if (!((EventUnitDamageDeathCheck(c_deathTypeRemove) == false))) {
            return false;
        }

        if (!((libUTES_gf_TesterLeaderboardValidUnitType(lv_unit_type) == true))) {
            return false;
        }
    }

    // Actions
    if (!runActions) {
        return true;
    }

    lv_unit_name = (lv_unit_type);
    lv_col = (UnitGetOwner(EventUnit()) - 8);
    lv_row = DataTableGetInt(true, lv_unit_name);
    libUTES_gv_leaderboard_minerals[lv_col] -= UnitTypeGetCost(lv_unit_type, c_unitCostMinerals);
    libUTES_gv_leaderboard_gas[lv_col] -= UnitTypeGetCost(lv_unit_type, c_unitCostVespene);
    libUTES_gf_TesterLeaderboardSpecialUnitCost(lv_unit_type, lv_col, true);
    BoardItemSetText(libUTES_gv_leaderboard, lv_col, 1, IntToText(libUTES_gv_leaderboard_minerals[lv_col]));
    BoardItemSetText(libUTES_gv_leaderboard, lv_col, 2, IntToText(libUTES_gv_leaderboard_gas[lv_col]));
    BoardItemSetText(libUTES_gv_leaderboard, lv_col, 3, IntToText(PlayerGetPropertyInt(UnitGetOwner(EventUnit()), c_playerPropSuppliesUsed)));
    lv_unitcount = UnitGroupCount(UnitGroup(lv_unit_type, UnitGetOwner(EventUnit()), RegionEntireMap(), UnitFilter(0, 0, (1 << c_targetFilterMissile), (1 << (c_targetFilterDead - 32)) | (1 << (c_targetFilterHidden - 32)) | (1 << (c_targetFilterInvulnerable - 32))), 0), c_unitCountAlive);
    if ((lv_unitcount == 0)) {
        BoardItemSetText(libUTES_gv_leaderboard, lv_col, lv_row, StringToText(""));
        BoardItemSetIcon(libUTES_gv_leaderboard, lv_col, lv_row, null, true);
        libUTES_gv_leaderboard_icon_flag[lv_col][lv_row] = false;
    }
    else {
        BoardItemSetText(libUTES_gv_leaderboard, lv_col, lv_row, IntToText(lv_unitcount));
    }
    return true;
}

//--------------------------------------------------------------------------------------------------
void libUTES_gt_LeaderboardUnitRemoved_Init () {
    libUTES_gt_LeaderboardUnitRemoved = TriggerCreate("libUTES_gt_LeaderboardUnitRemoved_Func");
    TriggerAddEventUnitDied(libUTES_gt_LeaderboardUnitRemoved, null);
}

void libUTES_InitTriggers () {
    libUTES_gt_InitializeUnitTesterInterface_Init();
    libUTES_gt_CtrlOff_Init();
    libUTES_gt_CtrlOn_Init();
    libUTES_gt_ShiftOff_Init();
    libUTES_gt_ShiftOn_Init();
    libUTES_gt_DialogItemIsUsed_Init();
    libUTES_gt_TesterClearUnits_Init();
    libUTES_gt_TesterDeleteUnits_Init();
    libUTES_gt_TesterPauseUnits_Init();
    libUTES_gt_TesterResetUnits_Init();
    libUTES_gt_TesterStartButton_Init();
    libUTES_gt_TesterStopButton_Init();
    libUTES_gt_TesterAttackButton_Init();
    libUTES_gt_TesterResult_Init();
    libUTES_gt_InstantBuild_Init();
    libUTES_gt_DisableStructures_Init();
    libUTES_gt_PlayerDeselectsAnyBuilder_Init();
    libUTES_gt_CreateNeutralStructure_Init();
    libUTES_gt_LeaderboardUnitCreated_Init();
    libUTES_gt_LeaderboardUnitRemoved_Init();
}

//--------------------------------------------------------------------------------------------------
// Library Initialization
//--------------------------------------------------------------------------------------------------
bool libUTES_InitLib_completed = false;

void libUTES_InitLib () {
    if (libUTES_InitLib_completed) {
        return;
    }

    libUTES_InitLib_completed = true;

    libUTES_InitLibraries();
    libUTES_InitVariables();
    libUTES_InitTriggers();
}

